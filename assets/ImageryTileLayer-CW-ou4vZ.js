const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/geometryEngine-Br_gHSDb.js","assets/index-DMwY2Yeh.js","assets/index-DGW5n9KZ.css","assets/geometryEngineBase-B0ZyeKAX.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/hydrated-BZTq-QB6.js","assets/imageryUtils-CBn6Q8pA.js","assets/utils-paHww2CL.js","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/PortalItem-CJdFYfTh.js","assets/jsonContext-C78W7VHJ.js","assets/portalItemUtils-Doqe9RdJ.js","assets/projection-DL1aNLQS.js","assets/projectBuffer-CWX1J5rk.js","assets/zscale-DcxcvFoT.js","assets/saveUtils-wtvPKSWy.js"])))=>i.map(i=>d[i]);
import{P as bt,t as ne,h as Le,j as J,w as H,s as O,U as lt,g as A,bt as Rt,X as I,Z as R,a2 as K,_ as ct,v as vt,cD as St,aK as _t,a1 as Tt,fD as kt,cQ as Ft,aD as Ct,dn as Ot,bU as ut,aM as Be,fE as Pt,e as Mt,bw as $t,z as Bt,I as Dt,ap as Nt,cI as Et,a6 as Jt,b6 as At,au as Lt}from"./index-DMwY2Yeh.js";import{S as zt,f as Ht}from"./Layer-B7MPCWr8.js";import{l as Wt}from"./ArcGISService-DfIkeWvW.js";import{l as Gt}from"./BlendLayer-BZi4HZ3X.js";import{e as jt}from"./CustomParametersMixin-D4WPrEFl.js";import{h as ht,w as ft,a as qt,i as Ut,p as ze,b as Vt,c as Xt,N as De,d as Yt,l as Kt,e as Qt,g as Zt,f as Xe,o as ei,j as Ye,k as Ke,W as Qe,m as ti,t as ii,z as si,L as ri,U as ni,E as ai,q as Ze,n as oi,r as li,s as ci}from"./RasterPresetRendererMixin-CZq9XmCu.js";import{y as mt}from"./arcgisLayerUrl-C2XR9Yu_.js";import{y as dt,d as ui}from"./commonProperties-BfyFIYkl.js";import{z as ee,p as hi}from"./TileInfo-Q51ovmOs.js";import{U as ke,j as fi,n as ve,D as pt,R as mi,u as di,l as pi,a as yi,f as gi,m as He,s as xi,_ as wi,g as Ie,b as Ii,E as bi,c as Se,W as Ri,h as vi,d as We,P as Si,T as _i,r as Ti,e as et,F as ki,i as Fi,N as Ci,k as pe,B as Oi,L as Pi,o as Mi,p as $i}from"./dataUtils-gynfw8Wy.js";import{V as ye,v as Ne,I as tt,l as it,b as Bi,e as Fe,K as be,i as Di,t as Ni,C as Ei,h as Ee,D as Je,d as Ji,T as yt,y as Ge,c as Ai,f as Li}from"./PolynomialTransform-MTNjCO5O.js";import{_ as zi}from"./QueueProcessor-BqXtagWC.js";import{d as je}from"./FeatureSet-1CBcRwmx.js";import{b as Hi}from"./OperationalLayer-DkH5aW2U.js";import{j as Wi}from"./PortalLayer-DdSdd8Dt.js";import{f as Gi}from"./RefreshableLayer-KOp797qb.js";import{t as ji}from"./ScaleRangeLayer-BawLb3lW.js";import{l as qi}from"./TemporalLayer-DyyQYNf6.js";import{y as ue}from"./Field-FlLvuz43.js";import{T as Ui}from"./TilemapCache-DjGQTzi6.js";import{p as Vi}from"./popupUtils-DpbfCD_q.js";import{A as ge}from"./interfaces-CL2NbQte.js";import"./TimeExtent-D_QVyVxF.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DsYZliz4.js";import"./common-DokbeE9L.js";import"./workers-CugKOIjN.js";import"./UniqueValueRenderer-BWeIsITM.js";import"./RendererLegendOptions-wLw-yCIt.js";import"./diffUtils-BNvOWYG7.js";import"./enums-BoehirYs.js";import"./colorRamps-D2x6Yad2.js";import"./compilerUtils-RCjhmI8-.js";import"./lengthUtils-DPy0fDMV.js";import"./styleUtils-BSN3jcA_.js";import"./layerUtils-Co4QOtAn.js";import"./defaults-BtwZGStO.js";import"./defaultsJSON-GKolV7NZ.js";import"./ClassBreaksDefinition-C_aHv-ic.js";import"./utils-Sq5BbeZP.js";import"./normalizeUtils-tYwCoEfv.js";import"./normalizeUtilsCommon-Dh7MTQbs.js";import"./utils-BQm91vBd.js";import"./utils-Blv5sJwT.js";import"./LRUCache-BZgFsCAB.js";import"./ElevationInfo-BPUkZdoe.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./colorUtils-BPNTvscP.js";import"./vec42-CwZz9wN3.js";import"./vec4f64-CMoMXWBi.js";import"./projection-DL1aNLQS.js";import"./projectBuffer-CWX1J5rk.js";import"./zscale-DcxcvFoT.js";import"./ReactiveMap-BlBgXnGY.js";import"./signal-PJgyBLag.js";import"./PortalItem-CJdFYfTh.js";import"./portalItemUtils-Doqe9RdJ.js";import"./TimeInfo-Bc08AgQt.js";import"./fieldType-C6h0mWzJ.js";import"./ByteSizeUnit-BsxeN7wM.js";let Xi=class{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const a=s.get(t);return a.refCount--,a.refCount<=0&&(s.delete(t),a.controller&&a.controller.abort()),a.refCount}return 0}getBlock(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const a=s.get(t);return a.ts=Date.now(),a.refCount++,s.delete(t),s.set(t,a),a.block}return null}putBlock(e,r,t,s){const a=this._cachedBlocks,n=e+"/"+r;if(a.has(n)){const l=a.get(n);l.ts=Date.now(),l.refCount++}else a.set(n,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,r){const t=this._cachedBlocks,s=e+"/"+r;t.has(s)&&t.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),t=Date.now();for(let s=0;s<r.length&&r[s][1].ts<=t-this._duration;s++)e.delete(r[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let t=0;t<r.length-this._size;t++)e.delete(r[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const _e=new Map,te=new Xi;function st(i,e){return e==null?i:`${i}?sliceId=${e}`}function Yi(i,e,r){var n,l;const t=_e.get(i);if(!t)return e==null?te.decreaseRefCount(i,r):0;if(e==null||t[e]==null)return te.decreaseRefCount(i,r);const s=(n=t[e])==null?void 0:n.cache,a=s==null?void 0:s.get(r);if(s&&a){if(a.refCount--,a.refCount===0){s.delete(r);for(let o=0;o<t.length;o++)(l=t[o])==null||l.cache.delete(r);a.controller&&a.controller.abort()}return a.refCount}return 0}function rt(i,e,r){var a,n,l;const t=_e.get(i);if(!t)return e==null?te.getBlock(i,r):null;if(e==null||t[e]==null){for(let o=0;o<t.length;o++){const c=(a=t[o])==null?void 0:a.cache.get(r);if(c)return c.refCount++,c.block}return te.getBlock(i,r)}const s=(n=t[e])==null?void 0:n.cache.get(r);if(s)return s.refCount++,s.block;for(let o=0;o<t.length;o++){if(o===e||!t[o])continue;const c=(l=t[o])==null?void 0:l.cache,u=c==null?void 0:c.get(r);if(c&&u)return u.refCount++,c.set(r,u),u.block}return null}function nt(i,e,r,t,s=null){var l;const a=_e.get(i);if(!a)return void(e==null&&te.putBlock(i,r,t,s));if(e==null||a[e]==null)return void te.putBlock(i,r,t,s);const n={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:s};t.then(()=>n.isResolved=!0).catch(()=>n.isRejected=!0),(l=a[e])==null||l.cache.set(r,n)}function Ki(i,e,r){var s;const t=_e.get(i);t?e!=null&&t[e]!=null?(s=t[e])==null||s.cache.delete(r):te.deleteBlock(i,r):e==null&&te.deleteBlock(i,r)}const at=8,Qi=256;let Zi=0,E=class extends bt{constructor(){super(...arguments),this._tileFetchQueue=new zi({concurrency:32,process:(i,e)=>this._fetchRawTile(i.pyramidLevel,i.row,i.col,{...i.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}normalizeCtorArgs(i){return i!=null&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:ee.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=ye(i.spatialReference);return e!=null&&i.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:i}=this.rasterInfo;return i==null||i.type==="gcs-shift"}set rasterJobHandler(i){var e,r;this._set("rasterJobHandler",i),this.datasetFormat==="Function"&&((r=(e=this.primaryRasters)==null?void 0:e.rasters)==null||r.forEach(t=>t.rasterJobHandler=i))}get rasterId(){return this.url||"rasterId-"+Zi++}set url(i){this._set("url",mt(i,ne.getLogger(this)))}async open(i){return this._openPromise??(this._openPromise=Ne().then(()=>this._open(i))),this._openPromise}async fetchTile(i,e,r,t={}){const s=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(i,e,r,s);return t={noClip:!0,...t},this.fetchPixels(a,s.size[0],s.size[1],t)}async identify(i,e={}){var k;i=Le(J,i).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:n}=s;let{transposedVariableName:l}=e;const o=n!=null&&a&&(t!=null||ht(r));o&&!l&&(l=r!=null&&r.length>0?r[0].variableName??void 0:n.variables[0].name,e={...e,transposedVariableName:l}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let f=tt(i,c,h);if(!u.intersects(f))return{location:f,value:null};if(s.transform!=null){const M=s.transform.inverseTransform(f);if(!s.nativeExtent.intersects(M))return{location:M,value:null};f=M}let m=0;const g=l!=null&&n!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const M=this.primaryRasters.rasters[0];if(g)return M.identify(f,e);const{pixelSize:z}=s,C=3,$=z.x*C/2,B=z.y*C/2,N=new H({xmin:f.x-$,xmax:f.x+$,ymin:f.y-B,ymax:f.y+B,spatialReference:c}),Q={interpolation:"nearest",multidimensionalDefinition:r,sliceId:e.sliceId},{pixelBlock:W}=await M.fetchPixels(N,C,C,Q),{pixelBlock:G}=await this.fetchPixels(N,C,C,Q);if(W==null)return{location:f,value:null};const q=Math.floor(C*C*.5),oe=!W.mask||W.mask[q]?W.pixels.map(j=>j[q]):null;let V;return G!=null&&(V=!G.mask||G.mask[q]?G.pixels.map(j=>j[q]):void 0),{location:f,value:oe,processedValue:V,pyramidLevel:0}}if(!g){if(e.srcResolution)m=it(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(i,e),m==null)return{location:f,value:null}}const y=this.identifyPixelLocation(f,m,null,g);if(y===null)return{location:f,value:null};const{row:d,col:p,rowOffset:x,colOffset:w,blockWidth:b}=y,_=l??e.sliceId,v=st(this.rasterId,_),T=`${m}/${d}/${p}`;let F=rt(v,null,T);F==null&&(F=this.fetchRawTile(m,d,p,e),nt(v,null,T,F));const S=await F;if(!((k=S==null?void 0:S.pixels)!=null&&k.length))return{location:f,value:null};const P=x*b+w;return this._processIdentifyResult(S,{srcLocation:f,position:P,pyramidLevel:m,useTransposedTile:!!g,requestSomeSlices:o,identifyOptions:e})}async fetchPixels(i,e,r,t={}){i=Bi(i),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:s}=this;if(t.requestRawData&&s)return this._fetchPixels(i,e,r,t);const a=ye(i.spatialReference),n=Fe(i);if(a==null||n===0||n===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(i,e,r,t);if(n>=3)return{extent:i,pixelBlock:null};const l=[],{xmin:o,xmax:c}=i,u=Math.round(a/(c-o)*e),h=u-Math.round((a/2-o)/(c-o)*e);let f=0;const m=[];for(let p=0;p<=n;p++){const x=new H({xmin:p===0?o:-a/2,xmax:p===n?c-a*p:a/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),w=p===0?u-h:p===n?e-f:u;f+=w,m.push(w);const b=t.disableWrapAround&&p>0?null:this._fetchPixels(x,w,r,t);l.push(b)}const g=(await Promise.all(l)).map(p=>p==null?void 0:p.pixelBlock);let y=null;const d={width:e,height:r};return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},t)).pixelBlock:y=ke(g,d,{blockWidths:m}),{extent:i,srcExtent:be(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:y}}async fetchRawPixels(i,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(i,e,r,t),{nativeExtent:a,nativePixelSize:n,storageInfo:l}=this.rasterInfo,o=2**i,c=n.x*o,u=n.y*o,h=new H({xmin:a.xmin+c*e.x,xmax:a.xmin+c*(e.x+r.width-1),ymin:a.ymax-u*(e.y+r.height-1),ymax:a.ymax-u*e.y,spatialReference:a.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=s;if(f.length===1&&f[0]!=null&&f[0].width===r.width&&f[0].height===r.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const g=i>0?l.pyramidBlockWidth:l.blockWidth,y=i>0?l.pyramidBlockHeight:l.blockHeight,d={x:e.x%g,y:e.y%y};let p;return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:r,clipOffset:d,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:p=ke(f,m,{clipOffset:d,clipSize:r}),{extent:h,srcExtent:h,pixelBlock:p}}fetchRawTile(i,e,r,t){throw new O("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return be(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?fi(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:s,query:a,headers:n}=e;r=r??e.retryCount??this.ioConfig.retryCount;const l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await lt(i,{...e,query:{...a,...t},headers:{...n,...l}})}catch(o){if(r>0)return r--,this.request(i,e,r);throw o}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||i==null||i.length===0?null:ft(i,e)}getTileExtentFromTileInfo(i,e,r,t){const s=t.lodAt(i);return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo,{pyramidResolutions:s}=i;if(!i.tileInfo){const a=[],n=i.maximumPyramidLevel||0;let l=(t.x+t.y)/2,o=1/.0254*96*l;for(let u=0;u<=n&&(a.unshift(new hi({level:n-u,resolution:l,scale:o})),u!==n);u++)if(s){const h=(s[u].x+s[u].y)/2;o*=h/l,l=h}else l*=2,o*=2;const c=new J({x:r.xmin,y:r.ymax,spatialReference:e});i.tileInfo=new ee({origin:c,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:a}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,r=512,t){const{width:s,height:a,nativeExtent:n,pixelSize:l,spatialReference:o}=i,c=new J({x:n.xmin,y:n.ymax,spatialReference:o});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(s,a))/Math.LN2-8)));const u=this.computeBlockBoundary(n,512,512,{x:n.xmin,y:n.ymax},[l],t);i.storageInfo=new ve({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,r,t,s,a=0,n=2){if(s.length===1&&a>0){s=[...s];let{x:u,y:h}=s[0];for(let f=0;f<a;f++)u*=n,h*=n,s.push({x:u,y:h})}const l=[],{x:o,y:c}=t;for(let u=0;u<s.length;u++){const{x:h,y:f}=s[u];l.push({minCol:Math.floor((i.xmin-o+.1*h)/e/h),maxCol:Math.floor((i.xmax-o-.1*h)/e/h),minRow:Math.floor((c-i.ymax+.1*f)/r/f),maxRow:Math.floor((c-i.ymin-.1*f)/r/f)})}return l}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(r!=null&&r.length)return r[i-1];const s=t**i;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(i,e,r,t){const{spatialReference:s,nativeExtent:a,storageInfo:n}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=n,u=t&&c!=null?c.tileSize[0]:n.blockWidth,h=t&&c!=null?c.tileSize[1]:n.blockHeight,f=tt(i,s,r);if(!a.intersects(f)||e<0||e>l)return null;const m=this.getPyramidPixelSize(e),{x:g,y}=m,d=(o.y-f.y)/y/h,p=(f.x-o.x)/g/u,x=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),w=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(p),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:f}}getTileExtent(i,e,r,t,s,a){const[n,l]=a,o=t.x+r*n*i.x,c=o+n*i.x,u=t.y-e*l*i.y,h=u-l*i.y;return new H({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}updateImageSpaceRasterInfo(i){const{pixelSize:e}=i,{width:r,height:t}=i,s=A.WebMercator;i.spatialReference=s,i.extent=i.nativeExtent=new H({xmin:-.5,ymax:.5,xmax:r-.5,ymin:.5-t,spatialReference:s}),i.isPseudoSpatialReference=!0,i.transform=null,i.pixelSize=new J({x:1,y:1,spatialReference:s});const{extent:a,storageInfo:n}=i;if(n){n.origin=new J({x:a.xmin,y:a.ymax,spatialReference:s});const{pyramidResolutions:l,tileInfo:o}=n;if(l&&l.forEach(c=>{c.x/=e.x,c.y/=e.y}),o){o.origin=n.origin;const c=(i.nativePixelSize.x+i.nativePixelSize.y)/2;o.lods.forEach((u,h)=>{u.resolution=c*2**h,u.scale=96*u.resolution/.0254})}}}async _fetchPixels(i,e,r,t={}){let s=Fe(i);if(s>=2)return{extent:i,pixelBlock:null};const a=this._getSourceDataInfo(i,e,r,t),{pyramidLevel:n,srcResolution:l,srcExtent:o,srcWidth:c,srcHeight:u,ul:h}=a;if(c===0||u===0)return{extent:i,srcExtent:o,pixelBlock:null};const{rasterInfo:f}=this,m=f.transform,g=(m==null?void 0:m.type)==="gcs-shift",y=ye(i.spatialReference)!=null;!g&&y||(s=Fe(a.srcExtent,g));const d=await this._fetchRawTiles(n,h,{width:c,height:u,wrapCount:s},t);if(!d)return{extent:i,srcExtent:o,pixelBlock:null};const p=f.storageInfo,x=n>0?p.pyramidBlockWidth:p.blockWidth,w=n>0?p.pyramidBlockHeight:p.blockHeight;let{x:b,y:_}=f.pixelSize;if(n>0){const{pyramidResolutions:j,pyramidScalingFactor:It}=p;if(j!=null&&j[n-1])({x:b,y:_}=j[n-1]);else{const Ve=It**n;b*=Ve,_*=Ve}}const v=f.spatialReference,T=new J({x:b,y:_,spatialReference:v}),F=x===c&&w===u&&h.x%x==0&&h.y%w==0,S=new J({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference}),P=!i.spatialReference.equals(v),k=v.isGeographic?1e-9:1e-4,{datumTransformation:M}=t;if(!P&&F&&d.pixelBlocks.length===1&&x===e&&w===r&&es(l,S,k))return{extent:i,srcExtent:o,srcTilePixelSize:T,pixelBlock:d.pixelBlocks[0]};const z=y&&ye(o.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,C=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");C&&!this.rasterJobHandler&&await Ne();const $=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:S.toJSON(),datumTransformation:M,rasterTransform:m,hasWrapAround:s>0||z,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:C},t):Di({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:S,datumTransformation:M,rasterTransform:m,hasWrapAround:s>0||z,isAdaptive:!1,includeGCSGrid:C});let B;const N=!t.requestRawData,Q={rows:$.spacing[0],cols:$.spacing[1]},W=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(n,d.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:q,isPartiallyFilled:oe}=d;let V=null;if(this.rasterJobHandler)({pixelBlock:B,localNorthDirections:V}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:q,destDimension:N?{width:e,height:r}:null,coefs:N?$.coefficients:null,sampleSpacing:N?Q:null,projectDirections:C,gcsGrid:C?$.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:W,blockWidths:null},t));else{const j=ke(G,q,{alignmentInfo:W});B=N?pt(j,{width:e,height:r},$.coefficients,Q,t.interpolation):j,C&&$.gcsGrid&&(V=mi({width:e,height:r},$.gcsGrid),B=di(B,this.rasterInfo.dataType,V))}return t.requestRawData||C?{extent:i,srcExtent:o,srcTilePixelSize:T,pixelBlock:B,transformGrid:$,localNorthDirections:V,isPartiallyFilled:oe}:{extent:i,srcExtent:o,srcTilePixelSize:T,pixelBlock:B}}async _fetchRawTiles(i,e,r,t){const{origin:s,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:n,blockHeight:l}=this.getBlockWidthHeight(i);let{x:o,y:c}=e,{width:u,height:h,wrapCount:f}=r;const m=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(o-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let g=0,y=0,d=0;f&&m!=null&&({worldColumnCountFromOrigin:y,originColumnOffset:d,rightPadding:g}=m,y*m.blockWidth-g>=o+u&&(g=0));const p=Math.floor(o/n),x=Math.floor(c/l),w=Math.floor((o+u+g-1)/n),b=Math.floor((c+h+g-1)/l),_=a[i];if(!_)return null;const{minRow:v,minCol:T,maxCol:F,maxRow:S}=_;if(f===0&&(b<v||w<T||x>S||p>F))return null;const P=new Array;let k=!1;const M=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let W=x;W<=b;W++)for(let G=p;G<=w;G++){let q=G;if(!t.disableWrapAround&&f&&m!=null&&y<=G&&(q=G-y-d),W>=v&&q>=T&&S>=W&&F>=q){const oe=this._tileFetchQueue.push({pyramidLevel:i,row:W,col:q,options:t},{signal:t.signal});M?P.push(new Promise(V=>{oe.then(j=>V(j)).catch(()=>{k=!0,V(null)})})):P.push(oe)}else P.push(Promise.resolve(null))}if(P.length===0)return null;const z=await Promise.all(P),C={height:(b-x+1)*l,width:(w-p+1)*n},{spatialReference:$}=this.rasterInfo,B=this.getPyramidPixelSize(i),{x:N,y:Q}=B;return{extent:new H({xmin:s.x+p*n*N,xmax:s.x+(w+1)*n*N,ymin:s.y-(b+1)*l*Q,ymax:s.y-x*l*Q,spatialReference:$}),pixelBlocks:z,mosaicSize:C,isPartiallyFilled:k}}_fetchRawTile(i,e,r,t){const s=this.rasterInfo.storageInfo.blockBoundary[i];if(!s)return Promise.resolve(null);const{minRow:a,minCol:n,maxCol:l,maxRow:o}=s;if(e<a||r<n||e>o||r>l)return Promise.resolve(null);const c=st(this.rasterId,t.sliceId),u=`${i}/${e}/${r}`;let h=rt(c,t.registryId,u);if(h==null){const f=new AbortController;h=this.fetchRawTile(i,e,r,{...t,signal:f.signal}),nt(c,t.registryId,u,h,f),h.catch(()=>Ki(c,t.registryId,u))}return t.signal&&Rt(t,()=>{Yi(c,t.registryId,u)}),h}_computeMagDirValues(i){var o;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(i==null?void 0:i.length)!==2||!((o=i[0])!=null&&o.length))return null;const t=i[0].length;if(r==="vector-magdir"){const c=i[1].map(u=>(u+360)%360);return[i[0],c]}const[s,a]=i,n=[],l=[];for(let c=0;c<t;c++){const[u,h]=pi([s[c],a[c]]);n.push(u),l.push(h)}return[n,l]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Ni(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,r,t={}){const s={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(s.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,s));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:n,srcHeight:l,pyramidLevel:o}=s,c=n/e,u=l/r,h=o<a&&c*u>=16,f=o===a&&this._requireTooManySrcTiles(n,l,e,r);if(h||f||n===0||l===0){const m=new J({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference});let g=Ei(m,this.rasterInfo.spatialReference,i,s.datumTransformation);const y=!g||t.srcResolution&&g.x+g.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&y){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-o+3>=d){const p=2**d;g={x:t.srcResolution.x*p,y:t.srcResolution.y*p}}}g&&(s.srcResolution=g,this._updateSourceDataInfo(i,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(i,e,r,t){const{tileInfo:s}=this.rasterInfo.storageInfo,a=Math.ceil(i/s.size[0])*Math.ceil(e/s.size[1]),n=i/r,l=e/t,o=Math.max(1,(r+t)/1024);return a>=Qi*o||n>at||l>at}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,t=r.spatialReference,{srcResolution:s,datumTransformation:a}=e,{pyramidLevel:n,pyramidResolution:l,excessiveReading:o}=it(s,r,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||be(i,t,a);if(c==null)return;const u=r.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:f}=r.storageInfo.origin,m=Math.floor((c.xmin-h)/l.x+.1),g=Math.floor((f-c.ymax)/l.y+.1),y=Math.floor((c.xmax-h)/l.x-.1),d=Math.floor((f-c.ymin)/l.y-.1),p=c.width<.1*l.x?0:y-m+1,x=c.height<.1*l.y?0:d-g+1;e.pyramidLevel=n,e.pyramidResolution=l,e.srcWidth=p,e.srcHeight=x,e.ul={x:m,y:g}}_getRequestOptionsWithSliceId(i){return this.rasterInfo.multidimensionalInfo!=null&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:r,position:t,pyramidLevel:s,useTransposedTile:a}=e,n=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:r,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!a){const d=i.pixels.map(w=>w[t]),p={location:r,value:d,pyramidLevel:s},x=this._computeMagDirValues(d.map(w=>[w]));return x!=null&&x.length&&(p.magdirValue=x.map(w=>w[0])),p}let o=i.pixels.map(d=>d.slice(t*n,t*n+n)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let f=qt(l,h.transposedVariableName);if(u){const d=Ut(f,h.multidimensionalDefinition,h.timeExtent);o=o.map(p=>d.map(x=>p[x])),c=c==null?void 0:c.map(p=>d.map(x=>p[x])),f=d.map(p=>f[p])}const m=i.noDataValues||this.rasterInfo.noDataValue,g={pixels:o,pixelType:i.pixelType};let y;return m!=null&&(yi(g,m),y=g.mask),{location:r,value:null,dataSeries:f.map((d,p)=>{const x={value:(y==null?void 0:y[p])===0?null:o.map(w=>w[p]),multidimensionalDefinition:d.multidimensionalDefinition.map(w=>new ze({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][p],c[1][p]]),x}),pyramidLevel:s}}};function es(i,e,r){return Math.abs(i.x-e.x)<r&&Math.abs(i.y-e.y)<r}I([R()],E.prototype,"_rasterTileAlignmentInfo",void 0),I([R()],E.prototype,"_tileFetchQueue",void 0),I([R({readOnly:!0})],E.prototype,"_isGlobalWrappableSource",null),I([R({readOnly:!0})],E.prototype,"_hasNoneOrGCSShiftTransform",null),I([R()],E.prototype,"_openPromise",void 0),I([R()],E.prototype,"rasterJobHandler",null),I([R({readOnly:!0})],E.prototype,"rasterId",null),I([R(dt)],E.prototype,"url",null),I([R({type:String,json:{write:!0}})],E.prototype,"datasetName",void 0),I([R({type:String,json:{write:!0}})],E.prototype,"datasetFormat",void 0),I([R()],E.prototype,"hasUniqueSourceStorageInfo",void 0),I([R()],E.prototype,"rasterInfo",void 0),I([R()],E.prototype,"ioConfig",void 0),I([R()],E.prototype,"sourceJSON",void 0),E=I([K("esri.layers.support.rasterDatasets.BaseRaster")],E);const ae=E,ts=40;let ie=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async fetchPixels(e,r,t,s={}){var b,_;const{rasters:a,rasterIds:n}=this.primaryRasters;let l=!1;const{interpolation:o}=s,c=(b=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:b.hasFocalFunction;!s.requestRawData&&c&&(l=a.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:l});const u=a.map(v=>v.fetchPixels(e,r,t,s)),h=await Promise.all(u),f=h.map(v=>v.pixelBlock),m=l||s.requestRawData?h.map(v=>v.srcTilePixelSize):null;if(s.skipRasterFunction||f.every(v=>v==null))return h[0];const g=((_=h.find(v=>v.pixelBlock!=null))==null?void 0:_.extent)??e;let y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:n}):this.rasterFunction.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:n});const{transformGrid:d}=h[0];if(!l||y==null||d==null){const v=s.noClip?null:this.getClippingGeometry(g.spatialReference);return s.noClip||s.requestRawData||y==null||!v||(y=await Ee(y,g,v)),{...h[0],pixelBlock:y}}const p={rows:d.spacing[0],cols:d.spacing[1]};let x;this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:r,height:t},coefs:d.coefficients,sampleSpacing:p,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:x=pt(y,{width:r,height:t},d.coefficients,p,o);const w=s.noClip?null:this.getClippingGeometry(e.spatialReference);return s.noClip||s.requestRawData||x==null||w==null||(x=await Ee(x,e,w)),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}getClippingGeometry(e){const r=this._clippingGeometry.get("0");if(!e||!r)return r;const t=ss(e);let s=this._clippingGeometry.get(t);return s!=null||(s=e.equals(r.spatialReference)?r:Je(r,e),this._clippingGeometry.set(t,s)),s}async _open(e){var u,h,f,m;const{rasterFunction:r}=this;(h=(u=this.primaryRasters)==null?void 0:u.rasters)!=null&&h.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&((f=this.primaryRasters.rasters)==null||f.forEach(g=>g.rasterJobHandler=this.rasterJobHandler)));const{rasters:t,rasterIds:s}=this.primaryRasters,a=t.map(g=>g.rasterInfo?void 0:g.open(e));await Promise.all(a);const n=t.map(({rasterInfo:g})=>g),l=r.bind({rasterInfos:n,rasterIds:s});if(r.rawSourceRasterInfos=n,!l.success||n.length===0)throw new O("raster-function:open",`cannot bind the function: ${l.error??""}`);const o=r.functionName==="Table"?r:(m=r.functionArguments)==null?void 0:m.raster;(o==null?void 0:o.functionName)==="Table"&&(r.rasterInfo.attributeTable=je.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(g=>is(g,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",r.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let r=e==null?void 0:e.clippingGeometry;if(r&&e.clippingType==="inside"){const{extent:t}=this.rasterInfo,{difference:s,densify:a}=await ct(async()=>{const{difference:l,densify:o}=await import("./geometryEngine-Br_gHSDb.js");return{difference:l,densify:o}},__vite__mapDeps([0,1,2,3,4,5]));let n=a(vt.fromExtent(t),2*(t.width+t.height)/ts);n=Je(n,r.spatialReference),r=s(n,r)}this._clippingGeometry.clear(),r&&this._clippingGeometry.set("0",r)}};I([R({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),I([R()],ie.prototype,"tileType",void 0),I([R()],ie.prototype,"rasterFunction",void 0),I([R()],ie.prototype,"primaryRasters",void 0),ie=I([K("esri.layers.support.rasterDatasets.FunctionRaster")],ie);const gt=ie;function is(i,e){const{storageInfo:r,pixelSize:t,spatialReference:s,extent:a}=i,{storageInfo:n,pixelSize:l,spatialReference:o,extent:c}=e;return t.x===l.x&&t.y===l.y&&s.equals(o)&&a.equals(c)&&r.blockHeight===n.blockHeight&&r.blockWidth===n.blockWidth&&r.maximumPyramidLevel===n.maximumPyramidLevel}function ss(i){return String(i.wkid??i.wkt??i.wkt2)}const rs=i=>{let e=class extends i{constructor(...t){var s,a;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((a=(s=t[0])==null?void 0:s.raster)==null?void 0:a.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.serviceRasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){var s;((s=t==null?void 0:t.functionName)==null?void 0:s.toLowerCase())==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}get rasterInfo(){return kt(ne.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(t){this._set("url",mt(t,ne.getLogger(this)))}get renderer(){if(this.type!=="imagery-tile")return this.internalRenderer;const{activePresetRendererName:t,presetRenderers:s}=this;if(t){const a=s==null?void 0:s.find(({name:n})=>n===t);return a==null?void 0:a.renderer.clone()}return this.internalRenderer}set renderer(t){this.type==="imagery-tile"&&(this.activePresetRendererName=null),this.internalRenderer=t}set internalRenderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("internalRenderer",t),this.updateRenderer())}readRenderer(t,s,a){var l,o;const n=(o=(l=s==null?void 0:s.layerDefinition)==null?void 0:l.drawingInfo)==null?void 0:o.renderer;return Qt(n,a)||void 0}async convertVectorFieldData(t,s){const{serviceRasterInfo:a}=this;if(t==null||!a)return null;const n=this._rasterJobHandler.instance,l=a.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:l},s):gi(t,l)}async computeStatisticsHistograms(t,s){await this.load(s),t=Le(Zt,t).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:n}=t;if(n==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=n;const{spatialReference:o}=a;n.spatialReference.equals(o)||(await Ne(),l=n.type==="extent"?be(n,o):Je(n,o));const c=t.pixelSize??new J({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:o}),{extent:u,width:h,height:f}=Ji(a,l,c),m=await this.fetchPixels(u,h,f,{...s,interpolation:"nearest"});if(m.pixelBlock==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=await Ee(m.pixelBlock,u,l),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:g},s):He(g)}async createFlowMesh(t,s){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(t,s):xi(t.meshType,t.simulationSettings,t.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var l,o;const{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return t;let a=t.multidimensionalDefinition||this.multidimensionalDefinition;a!=null&&a.length||(a=Xe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=t.timeExtent||this.timeExtent;if(a!=null&&n!=null&&(n.start!=null||n.end!=null)){a=a.map(p=>p.clone());const c=(o=(l=s.variables.find(({name:p})=>p===a[0].variableName))==null?void 0:l.dimensions)==null?void 0:o.find(({name:p})=>p==="StdTime"),u=a.find(({dimensionName:p})=>p==="StdTime");if(!c||!u)return{...t,multidimensionalDefinition:null};const{start:h,end:f}=n,m=h==null?null:h.getTime(),g=f==null?null:f.getTime(),y=m??g,d=g??m;if(c.values!=null){const p=c.values.filter(x=>{if(Array.isArray(x)){if(y===d)return x[0]<=y&&x[1]>=y;const w=x[0]<=y&&x[1]>y||x[0]<d&&x[1]>=d,b=x[0]>=y&&x[1]<=d||x[0]<y&&x[1]>d;return w||b}return y===d?x===y:x>=y&&x<=d});if(p.length){const x=p.sort((w,b)=>{const _=Array.isArray(w)?w[0]:w,v=Array.isArray(w)?w[1]:w,T=Array.isArray(b)?b[0]:b,F=Array.isArray(b)?b[1]:b;return y===d?_-T:Math.abs(v-d)-Math.abs(F-d)})[0];u.values=[x]}else a=null}else if(c.hasRegularIntervals&&c.extent){const[p,x]=c.extent;y>x||d<p?a=null:u.values=y===d?[y]:[Math.max(p,y),Math.min(x,d)]}}return a!=null&&ei(a,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:a}}async updateRasterFunction(){var u,h,f;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const m=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&m&&this._set("rasterFunction",De.fromJSON(m)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let t,s=this.raster,a=!1;s.datasetFormat==="Function"?(t=s.primaryRasters.rasters,s=t[0],a=!0):t=[s];const{rasterFunction:n}=this;if(n){const m={raster:s};t.length>1&&t.forEach(d=>m[d.url]=d);const g=yt(((h=n.functionDefinition)==null?void 0:h.toJSON())??n.toJSON(),m),y=new gt({rasterFunction:g});y.rasterJobHandler=this._rasterJobHandler.instance,await y.open(),this._cachedRasterFunctionJson=(f=this.rasterFunction)==null?void 0:f.toJSON(),this.raster=y}else this.raster=s,this._cachedRasterFunctionJson=null,await s.open();if(this._cachedRendererJson=null,!a&&!n)return;const{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l!=null&&l.length?l.some(m=>m>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:s}=this;if(!t||!s||!this.renderer)return;const{rasterInfo:a}=this.raster,n=Ye(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=n==null?void 0:n.name,o=Ke({...this.renderer.toJSON(),variableName:l});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=Qe(a,l),s.rendererJSON=o,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=o)}async applyRenderer(t,s){const a=t==null?void 0:t.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let n;await this.updateRenderer();const l=this._rasterJobHandler.instance,o=this.bandIds??[];return n=l?await l.symbolize({...t,simpleStretchParams:s,bandIds:o}):this.symbolizer.symbolize({...t,simpleStretchParams:s,bandIds:o}),n}getTileUrl(t,s,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${s}/${a}`:""}getCompatibleTileInfo(t,s,a=!1){if(!this.loaded||s==null)return null;if(a&&t.equals(this.spatialReference))return this.tileInfo;const n=Ft(t);return ee.create({size:256,spatialReference:t,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(t){var s;return this.loaded?((s=this._compatibleFullExtent)!=null&&s.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,s,a,n={}){var o;if(r(this),n.requestAsImageElement){const c=this.getTileUrl(t,s,a);return lt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then(u=>u.data)}const{serviceRasterInfo:l}=this;if(l.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null){const c=n.tileInfo||l.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,s,a,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((o=this.renderer)==null?void 0:o.type)==="raster-shaded-relief"&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,s,a,n)}async fetchPixels(t,s,a,n={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),a=Math.round(a),this.raster.fetchPixels(t,s,a,n))}async identify(t,s={}){var o;await this.load();const{raster:a,serviceRasterInfo:n}=this;if((n==null?void 0:n.multidimensionalInfo)!=null&&!(n.hasMultidimensionalTranspose&&(ht(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:t,value:null};const l=(o=this.multidimensionalSubset)==null?void 0:o.areaOfInterest;if(l&&!l.contains(t))throw new O("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(t,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var n,l,o;const t=(n=this.serviceRasterInfo)==null?void 0:n.multidimensionalInfo;if(t==null||((l=this.serviceRasterInfo)==null?void 0:l.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,a=(o=s==null?void 0:s[0])==null?void 0:o.variableName;return t.variables.some(c=>c.name===a&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var a;const s=t??((a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo);return ti(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Xe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new ii;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){r(this);const{raster:s}=this,a=si(s.rasterInfo,s.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",a)}}_configDefaultRenderer(t="no"){var h,f,m;r(this);const{rasterInfo:s}=this.raster,a=Ye(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=a==null?void 0:a.name,l=ri({variableName:n,rasterFunctionName:(h=this.rasterFunction)==null?void 0:h.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&s.bandCount>1&&(this.bandIds=(l==null?void 0:l.bandIds)??ni(s)),!this.renderer||t==="override"){const g=ai(this.raster),y=(l==null?void 0:l.renderer)??Ze(s,{bandIds:this.bandIds,variableName:n,rasterFunctionColorRamp:g}),d=s.statistics,p=d&&d.length>0?d[0]:null,x=(p==null?void 0:p.max)??0,w=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&y.type==="raster-stretch"&&(x>1e24||w<-1e24)&&(y.dynamicRangeAdjustment=!0,y.customStatistics=null,y.stretchType==="none"&&(y.stretchType="min-max")),this.renderer=y}const o=Ke({...this.renderer.toJSON(),variableName:n}),c=Qe(s,n);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=c):this.symbolizer=new wi({rendererJSON:o,rasterInfo:c});const u=this.symbolizer.bind();if(u.success){if(t==="auto"){const{colormap:g}=this.raster.rasterInfo,y=this.renderer;if(g!=null&&y.type==="raster-colormap"){const d=Ze(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(y)&&this._configDefaultRenderer("override")}else if(y.type==="raster-stretch"){const d=(f=this.bandIds)==null?void 0:f.length,p=(m=y.customStatistics)==null?void 0:m.length;!y.dynamicRangeAdjustment&&p&&d&&p!==d&&this._configDefaultRenderer("override")}}}else ne.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.serviceRasterInfo)throw new O("imagery-tile","no raster")}return I([R({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),I([R({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),I([R({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),I([R({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([R({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),I([R({type:[St],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],e.prototype,"bandIds",void 0),I([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([R({json:{read:!1}})],e.prototype,"fullExtent",null),I([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),_t(Vt)],e.prototype,"interpolation",void 0),I([R()],e.prototype,"ioConfig",void 0),I([R({type:[ze],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([R({type:Xt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([R()],e.prototype,"raster",void 0),I([R({type:De,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([R({readOnly:!0})],e.prototype,"rasterInfo",null),I([R()],e.prototype,"serviceRasterInfo",void 0),I([R()],e.prototype,"sourceJSON",void 0),I([R({readOnly:!0,type:A,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([R({type:ee})],e.prototype,"tileInfo",void 0),I([R(dt)],e.prototype,"url",null),I([R()],e.prototype,"renderer",null),I([R({types:Kt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const t=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Yt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"internalRenderer",null),I([Tt("internalRenderer")],e.prototype,"readRenderer",null),I([R({clonable:!1})],e.prototype,"symbolizer",void 0),e=I([K("esri.layers.mixins.ImageryTileMixin")],e),e};function xt(i){return["x","e","east","long","longitude"].includes(i.toLowerCase())}function wt(i){return["y","n","west","lat","latitude"].includes(i.toLowerCase())}function ns(i){const{axes:e}=i.domain,r=Object.keys(e),t=[],s=[];let a=-1,n=-1,l=[];for(let x=0;x<r.length;x++){const w=r[x];xt(w)?a=x:wt(w)&&(n=x);const b=e[w],_=[];if("values"in b){b.values.forEach(T=>_.push(typeof T=="string"?new Date(T).getTime():T));const v=_[1]-_[0];t.push([_[0]-.5*v,_[_.length-1]+.5*v]),s.push(v)}else{const{start:v,stop:T,num:F}=b,S=(T-v)/(F-1);t.push([v-.5*S,T+.5*S]),s.push(S);for(let P=0;P<F;P++)_.push(v+S*P)}l.push({name:w,values:_,extent:[_[0],_[_.length-1]]})}a>-1&&n===-1?n=a===0?1:0:n>-1&&a===-1?a=n===0?1:0:n===-1&&a===-1&&(a=0,n=1),l=l.filter((x,w)=>!(w===a||w===n));const{referencing:o}=i.domain,c=o.find(x=>x.coordinates.includes(r[a])).system.id,u=c==null?void 0:c.slice(c.lastIndexOf("/")+1),h=u==null||u==="CRS84"?4326:Number(u),f=new A({wkid:h}),[m,g]=t[a],[y,d]=t[n],p=new H({xmin:m,xmax:g,ymin:y,ymax:d,spatialReference:f});return{width:Math.round(p.width/s[a]),height:Math.round(p.height/s[n]),extent:p,dimensions:l}}function Ce(i){const e=Ot();return e?i[e]??Object.values(i)[0]:Object.values(i)[0]}function Oe(){return Math.round(255*Math.random())}function as(i){var t,s;const e={},{parameters:r}=i;if(!r)return e;for(const[a,n]of Object.entries(r)){const{type:l,description:o,unit:c,categoryEncoding:u,observedProperty:h}=n;if(l==="Parameter"&&(e[a]={},o&&(e[a].description=Ce(o)),c&&(e[a].unit=c.label?Ce(c.label):null,e[a].symbol=(t=c.symbol)==null?void 0:t.value),u)){const f=Object.entries(u).map((y,d)=>({OID:d,Value:Number(y[1]),ClassName:y[0].slice(y[0].lastIndexOf("/")+1),Count:1}));let m=!1;(s=h==null?void 0:h.categories)!=null&&s.length&&(h.categories.forEach(y=>{if(!y.id)return;const d=y.id.slice(y.id.lastIndexOf("/")+1),p=f.find(w=>w.ClassName===d);if(!p)return;const x=y.label?Ce(y.label):null;if(p.Label=x,y.preferredColor){const w=Ct.fromHex(y.preferredColor);w&&(m=!0,p.Red=w.r,p.Green=w.g,p.Blue=w.b)}}),m&&f.forEach(y=>{y.Red==null&&(y.Red=Oe(),y.Green=Oe(),y.Blue=Oe())}));const g={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:f.map(y=>({attributes:y}))};m&&g.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[a].attributeTable=g}}return e}function os(i){let e=Number.MAX_VALUE,r=-Number.MAX_VALUE;for(let t=0;t<i.length;t++){const s=i[t];s!=null&&(s<e&&(e=s),s>r&&(r=s))}return Ii(e,r)}function ls(i,e,r){const t=i.map((o,c)=>({name:o,count:e[c]})).sort((o,c)=>o.name>c.name?-1:1),s=(a=1,o=>a*=o.count);var a;const n=[...t.slice(1),{name:"",count:1}].reverse().map(s).reverse();let l=0;for(let o=i.length-1;o>=0;o--)l+=n[t.findIndex(({name:c})=>c===i[o])]*(r%e[o]),r=Math.floor(r/e[o]);return l}function cs(i){var f;const{width:e,height:r,extent:t,dimensions:s}=ns(i),{ranges:a}=i,n=Object.keys(a).sort((m,g)=>m<g?-1:1),l=[];for(let m=0;m<n.length;m++){const g=n[m];s!=null&&s.length&&l.push({name:g,dimensions:s})}const o=as(i);l.forEach(m=>o[m.name]&&Object.assign(m,o[m.name]));const c=l.length?{variables:l}:void 0,u=[];for(let m=0;m<n.length;m++){const g=n[m],{values:y,dataType:d,axisNames:p,shape:x}=a[g],w=x.length>2?m*x.slice(0,-2).reduce((S,P)=>S*P):0,b=p.slice(0,-2),_=x.slice(0,-2),v=d==="float"?"f32":os(y),T=e*r,F=y.length/T;for(let S=0;S<F;S++){const P=Ie.createEmptyBand(v,T),k=new Uint8Array(T).fill(255);let M=!1;const z=S*T;for(let C=0;C<T;C++){const $=y[z+C];$==null?(k[C]=0,M=!0):P[C]=$}if(m===0||s!=null&&s.length){const C=new Ie({width:e,height:r,mask:M?k:null,pixels:[P],pixelType:v});C.updateStatistics(),(s==null?void 0:s.length)?u[ls(b,_,S)+w]=C:u.push(C)}else{const C=u[S];C.pixels.push(P),M?C.mask&&(C.mask=Ie.combineBandMasks([C.mask,k])):C.mask=M?k:null}}}const h=(f=Object.values(o).find(m=>m.attributeTable))==null?void 0:f.attributeTable;return{extent:t,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:n}}let le=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(i,e,r,t={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[n,l]=a.storageInfo.tileInfo.size,{sliceId:o}=t,{pixelBlocks:c}=this.source,u={pixelBlock:o==null?c[0]:c[o],useBilinear:a.dataType!=="thematic",tileSize:{width:n,height:l},level:i,row:e,col:r},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,t):bi(u);return Promise.resolve(h)}const s=this._pixelBlockTiles.get(`${i}/${e}/${r}`);return Promise.resolve(s)}async _open(i){const e=this.source,{pixelBlocks:r,attributeTable:t,statistics:s,histograms:a,name:n,nativeExtent:l,transform:o}=e,c=r[0],{width:u,height:h,pixelType:f}=c,m=e.extent??new H({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new A({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,y={x:m.width/u,y:m.height/h},d={...e.keyProperties};t&&(d.DataType="Thematic");const p=new Se({width:u,height:h,pixelType:f,extent:m,nativeExtent:l,attributeTable:t,transform:o,pixelSize:y,spatialReference:m.spatialReference,bandCount:c.pixels.length,keyProperties:d,multidimensionalInfo:e.multidimensionalInfo,statistics:s,isPseudoSpatialReference:g,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(p),this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),p.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,p.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},i),p.multidimensionalInfo||(this.source=null),this.datasetName=n}async _buildInMemoryRaster(i,e,r){var h,f;const{rasterInfo:t}=this,s=t.storageInfo.maximumPyramidLevel??0,a=t.dataType!=="thematic",n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:i,tileSize:e,maximumPyramidLevel:s,useBilinear:a},r):Promise.resolve(Ri(i,e,s,a)),l=t.statistics!=null,o=t.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},r):Promise.resolve(vi(i)),u=await ut([n,c]);if(!u[0].value&&u[1].value)throw new O("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,l||(t.statistics=(h=u[1].value)==null?void 0:h.statistics),o||(t.histograms=(f=u[1].value)==null?void 0:f.histograms)}async _buildMDimStats(i,e,r){for(let t=0;t<e.variables.length;t++){const s=e.variables[t];if(s.statistics)continue;const a=s.dimensions.map(c=>{var u,h;return new ze({variableName:s.name,dimensionName:c.name,values:[((u=c.values)==null?void 0:u[0])??((h=c.extent)==null?void 0:h[0])],isSlice:!0})}),n=ft(a,e),l=n==null?null:i[n];if(l==null)continue;const o=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},r):He(l);s.statistics=o.statistics,s.histograms||(s.histograms=o.histograms)}}};I([R({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),I([R()],le.prototype,"source",void 0),I([R()],le.prototype,"url",null),le=I([K("esri.layers.support.rasterDatasets.InMemoryRaster")],le);const qe=le;let fe=class extends ae{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,r,t,s={}){return this._inMemoryRaster.fetchRawTile(e,r,t,s)}async _open(e){const{extent:r,pixelBlocks:t,multidimensionalInfo:s,attributeTable:a,bandNames:n}=await this._fetchData(e),{statistics:l,histograms:o}=He(t[0]),c=n==null?void 0:n.map(m=>({BandName:m})),u={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:c},h=new qe({source:{extent:r,pixelBlocks:t,attributeTable:a?je.fromJSON(a):null,multidimensionalInfo:s,statistics:l,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await h.open(),this._inMemoryRaster=h;const f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",h.rasterInfo)}async _fetchData(e){var a,n,l,o;const r=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,t="imagery-tile-layer:open-coverage-json";if(((a=r.type)==null?void 0:a.toLowerCase())!=="coverage"||((l=(n=r.domain)==null?void 0:n.domainType)==null?void 0:l.toLowerCase())!=="grid")throw new O(t,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new O(t,"Missing ranges in the grid coverage data");if(!((o=r.domain.referencing)!=null&&o.length))throw new O(t,"Missing domain referencing in the grid coverage data");const s=Object.values(r.ranges);for(let c=0;c<s.length;c++){const{axisNames:u,shape:h,type:f,values:m}=s[c];if(!(f.toLowerCase()==="ndarray"&&(m!=null&&m.length)&&(u!=null&&u.length)&&(h!=null&&h.length)))throw new O(t,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(xt(u[u.length-1])&&wt(u[u.length-2])))throw new O(t,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return cs(r)}};I([R({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),I([R({constructOnly:!0})],fe.prototype,"source",void 0),fe=I([K("esri.layers.support.rasterDatasets.CovJSONRaster")],fe);const us=fe;function he(i,e){if(!i||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const a=he(i,r);for(let n=0;n<a.length;n++)he(a[n],e).forEach(l=>t.push(l));return t}const s=i.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let a=0;a<s.length;a++)t.push(s[a]||s.item(a));return t}function U(i,e){if(!i||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=he(i,r);return t.length>0?e?U(t[0],e):t[0]:null}function Y(i,e=null){const r=e?U(i,e):i;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function hs(i,e){const r=he(i,e),t=[];let s;for(let a=0;a<r.length;a++)s=r[a].textContent||r[a].nodeValue,s&&(s=s.trim(),s!==""&&t.push(s));return t}function xe(i,e){return hs(i,e).map(r=>Number(r))}function re(i,e){const r=Y(i,e);return Number(r)}function Pe(i,e){var s;const r=(s=i==null?void 0:i.nodeName)==null?void 0:s.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function ot(i,e){if(!i||!e)return null;const r=[];for(let t=0;t<i.length;t++)r.push(i[t]),r.push(e[t]);return r}function fs(i){const e=U(i,"GeodataXform"),r=Te(re(e,"SpatialReference/WKID")||Y(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=re(e,"PolynomialOrder")??1,s=xe(e,"CoeffX/Double"),a=xe(e,"CoeffY/Double"),n=xe(e,"InverseCoeffX/Double"),l=xe(e,"InverseCoeffY/Double"),o=ot(s,a),c=ot(n,l);return{spatialReference:r,transform:o&&c&&o.length&&c.length?new Ge({spatialReference:r,polynomialOrder:t,forwardCoefficients:o,inverseCoefficients:c}):null}}function ms(i){var f;const e=re(i,"NoDataValue"),r=U(i,"Histograms/HistItem"),t=re(r,"HistMin"),s=re(r,"HistMax"),a=re(r,"BucketCount"),n=(f=Y(r,"HistCounts"))==null?void 0:f.split("|").map(m=>Number(m));let l,o,c,u;he(i,"Metadata/MDI").forEach(m=>{const g=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=g;break;case"STATISTICS_MAXIMUM":o=g;break;case"STATISTICS_MEAN":c=g;break;case"STATISTICS_STDDEV":u=g}});const h=re(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:n!=null&&n.length&&t!=null&&s!=null?{min:t,max:s,size:a||n.length,counts:n}:null,sourceBandIndex:h,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:u}:null}}function Te(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new A({wkid:e});if(i=String(i).trim(),Pt(i))return new A({wkt2:i});const r=i.toUpperCase();if(r.startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;const t=r.indexOf("VERTCS"),s=r.indexOf("PROJCS"),a=s>-1?s:r.indexOf("GEOGCS");if(a===-1)return null;const n=i.slice(a,i.lastIndexOf("]",t)+1).trim(),l=i.slice(t,i.lastIndexOf("]")).trim();e=Me(n);const o=new A(e?{wkid:e}:{wkt:n}),c=Me(l);return c&&(o.vcsWkid=c),o}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(e=Me(i),new A(e!==0?{wkid:e}:{wkt:i})):null}function Me(i){var s;const e=i.replaceAll("]","[").replaceAll('"',"").split("[").map(a=>a.trim()).filter(a=>a!==""),r=e[e.length-1].split(","),t=(s=r[0])==null?void 0:s.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const a=Number(r[1]);if(!isNaN(a)&&a!==0)return a}return 0}function Ue(i){var t;if(((t=i==null?void 0:i.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Pe(s,"SRS")){if(!e.spatialReference){const a=Y(s);e.spatialReference=Te(a)}}else if(Pe(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:a,transform:n}=fs(s);e.transform=n,e.spatialReference||(e.spatialReference=a)}else he(s,"MDI").forEach(a=>e.metadata[a.getAttribute("key")]=Y(a));else if(Pe(s,"PAMRasterBand")){const a=ms(s);a.sourceBandIndex!=null&&e.rasterBands[a.sourceBandIndex]==null?e.rasterBands[a.sourceBandIndex]=a:e.rasterBands.push(a)}}});const r=e.rasterBands;if(r.length){const s=!!r[0].statistics;e.statistics=s?r.map(n=>n.statistics).filter(Be):null;const a=!!r[0].histogram;e.histograms=a?r.map(n=>n.histogram).filter(Be):null}return e}let Re=class extends ae{fetchRawTile(i,e,r,t={}){return this._inMemoryRaster.fetchRawTile(i,e,r,t)}async _open(i){const e=await this._fetchData(i);let{spatialReference:r,statistics:t,histograms:s,transform:a}=await this._fetchAuxiliaryData(i);const n=!r;n&&(r=new A({wkid:3857})),s!=null&&s.length&&t==null&&(t=We(s));const{width:l,height:o}=e;let c=new H({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:r});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const m=a.forwardCoefficients;h=m&&m[1]===0&&m[2]===0,h&&(a=null,c=u)}const f=new qe({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[e],statistics:t,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i==null?void 0:i.signal}),r=Si(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new O("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),s=t==="gif"||t==="bmp"||!Mt("ios"),a=await this.decodePixelBlock(e,{format:t,useCanvas:s,hasNoZlibMask:!0});if(a==null)throw new O("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(i){var u;const e=i==null?void 0:i.signal,{skipExtensions:r=[],skipMapInfo:t}=this.ioConfig,s=t||r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),a=this.datasetFormat,n=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,l=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ut([s,l]);if(e!=null&&e.aborted)throw $t();const c=Ue((u=o[0].value)==null?void 0:u.data);if(!c.transform){const h=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;c.transform=(h==null?void 0:h.length)===6?new Ge({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return c}};I([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=I([K("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const we=Re;let me=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(i,e,r,t={}){const{storageInfo:s,extent:a}=this.rasterInfo,{transposeInfo:n}=s,l=n!=null&&!!t.transposedVariableName;if(this._slices&&!l&&t.sliceId==null)return null;const o=l?0:s.maximumPyramidLevel-i+this._levelOffset,c=`${this.url}/tile/${o}/${e}/${r}`,u=this._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!h)return null;const f=l?n.tileSize:s.tileInfo.size,m=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(m==null)return null;const g=s.blockBoundary[i];if(s.compression!=="jpg"||r>g.minCol&&r<g.maxCol&&e>g.minRow&&e<g.maxRow)return m;const{origin:y,blockWidth:d,blockHeight:p}=s,{x,y:w}=this.getPyramidPixelSize(i),b=Math.round((a.xmin-y.x)/x)%d,_=Math.round((a.xmax-y.x)/x)%d||d,v=Math.round((y.y-a.ymax)/w)%p,T=Math.round((y.y-a.ymin)/w)%p||p,F=r===g.minCol?b:0,S=e===g.minRow?v:0,P=r===g.maxCol?_:d,k=e===g.maxRow?T:p;return _i(m,{x:F,y:S},{width:P-F,height:k-S}),m}getSliceIndex(i){if(!this._slices||i==null||i.length===0)return null;const e=i;for(let r=0;r<this._slices.length;r++){const t=this._slices[r].multidimensionalDefinition;if(t.length===e.length&&!t.some(s=>{const a=e.find(n=>s.variableName===n.variableName&&n.dimensionName===s.dimensionName);return a?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return r}return null}async fetchVariableStatisticsHistograms(i,e){var a,n,l;const r=this.request(this.url+"/statistics",{query:{variable:i,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.statistics}),t=this.request(this.url+"/histograms",{query:{variable:i,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.histograms}),s=await Promise.all([r,t]);return s[0]&&s[0].forEach(o=>{o.avg=o.mean,o.stddev=o.standardDeviation}),(l=(n=(a=s[1])==null?void 0:a[0])==null?void 0:n.counts)!=null&&l.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(i,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(i,0,e.datumTransformation);if(r===null)return null;let t=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let a=s-t+this._levelOffset;const n=r.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,r.row,r.col,e)==="available")break}catch{}if(a--,t++,r=this.identifyPixelLocation(n,t,e.datumTransformation),r===null)return null}return a===-1||r==null?null:t}async _open(i){var T,F;const e=i==null?void 0:i.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=r.data;if(this.sourceJSON=t,!t)throw new O("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new O("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(s.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((T=t.name)==null?void 0:T.slice(t.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:e});if(a==null)throw new O("image-server-raster:open","cannot initialize image service");oi(a,t);const n=this.tileType==="Map"?ds(t.tileInfo,t):ee.fromJSON(t.tileInfo);Bt(n);const[l,o]=this._computeMinMaxLOD(a,n),{extent:c,pixelSize:u}=a,h=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:m}=n;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>h||!m.some(S=>Math.abs(S.resolution-f)<h))&&(u.x=u.y=l.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const g=l.level-o.level,[y,d]=n.size,p=[],x=[];m.forEach((S,P)=>{S.level>=o.level&&S.level<=l.level&&p.push({x:S.resolution,y:S.resolution}),P<m.length-1&&x.push(Math.round(10*S.resolution/m[P+1].resolution)/10)}),p.sort((S,P)=>S.x-P.x);const w=this.computeBlockBoundary(c,y,d,n.origin,p,g),b=p.length>1?p.slice(1):null;let _;t.transposeInfo&&(_={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:((F=a.keyProperties)==null?void 0:F._yxs.PacketSize)??0});const v=x.length<=1||x.length>=3&&x.slice(0,-1).every(S=>S===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/g))/10;if(a.storageInfo=new ve({blockWidth:n.size[0],blockHeight:n.size[1],pyramidBlockWidth:n.size[0],pyramidBlockHeight:n.size[1],pyramidResolutions:b,pyramidScalingFactor:v,compression:n.format,origin:n.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:n,transposeInfo:_,blockBoundary:w}),ps(a),this._set("rasterInfo",a),t.capabilities.toLowerCase().includes("tilemap")){const S={tileInfo:a.storageInfo.tileInfo,parsedUrl:Dt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Ui({layer:S})}}async _fetchRasterInfo(i){const e=this.sourceJSON;if(this.tileType==="Map"){const n=e.fullExtent||e.extent,l=Math.ceil((n.xmax-n.xmin)/e.pixelSizeX-.1),o=Math.ceil((n.ymax-n.ymin)/e.pixelSizeY-.1),c=A.fromJSON(e.spatialReference||n.spatialReference),u=new J({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new Se({width:l,height:o,bandCount:3,extent:H.fromJSON(n),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=i,t=li(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(n=>{var l;return(l=n.data)==null?void 0:l.slices}).catch(()=>null):null,a=await Promise.all([t,s]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_computeMinMaxLOD(i,e){const{pixelSize:r}=i,t=.5/i.width*r.x,{lods:s}=e,a=e.lodAt(Math.max.apply(null,s.map(f=>f.level))),n=e.lodAt(Math.min.apply(null,s.map(f=>f.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[a,n];if(l==="Raster")return[s.find(f=>f.resolution===r.x)??a,n];const{minScale:o,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=s.find(f=>Math.abs(f.scale-c)<t),u||(u=s.filter(f=>f.scale>c).sort((f,m)=>f.scale>m.scale?1:-1)[0]??a));let h=n;return o>0&&(h=s.find(f=>Math.abs(f.scale-o)<t)??n,this._levelOffset=h.level-n.level),[u,h]}};function ds(i,e){if(!i)return null;const{minScale:r,maxScale:t,minLOD:s,maxLOD:a}=e;if(s!=null&&a!=null)return ee.fromJSON({...i,lods:i.lods.filter(({level:n})=>n!=null&&n>=s&&n<=a)});if(r!==0&&t!==0){const n=c=>Math.round(1e4*c)/1e4,l=r?n(r):1/0,o=t?n(t):-1/0;return ee.fromJSON({...i,lods:i.lods.filter(c=>{const u=n(c.scale);return u<=l&&u>=o})})}return ee.fromJSON(i)}function ps(i){const{extent:e,spatialReference:r}=i;e.xmin>-1&&e.xmax>181&&(r!=null&&r.wkid)&&r.isGeographic&&(i.nativeExtent=i.extent,i.transform=new Ai,i.extent=i.transform.forwardTransform(e))}I([R({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([R()],me.prototype,"tileType",void 0),me=I([K("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const ys=me,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const Z=new Map;Z.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Z.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Z.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Z.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(i,e,r,t={}){const{blockWidth:s,blockHeight:a,blockBoundary:n}=this.rasterInfo.storageInfo,l=n[i];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:o,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(i,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const k=new Uint8Array(s*a);return new Ie({width:s,height:a,pixels:void 0,mask:k,validPixelCount:0})}const{bandIds:m}=this.ioConfig,g=this._getBandSegmentCount(),y=[];let d=0;for(d=0;d<g;d++)m&&!m.includes(d)||y.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const p=await Promise.all(y),x=p.map(k=>k.data.byteLength).reduce((k,M)=>k+M),w=new Uint8Array(x),b=[];let _=0;for(d=0;d<g;d++)b.push(_),w.set(new Uint8Array(p[d].data),_),_+=p[d].data.byteLength;const v=Z.get(this.rasterInfo.storageInfo.compression).decoderFormat,T=await this.decodePixelBlock(w.buffer,{width:s,height:a,format:v,planes:(m==null?void 0:m.length)||o,offsets:b,pixelType:c});if(T==null)return null;let{noDataValue:F}=this.rasterInfo;if(F!=null&&v!=="lerc"&&!T.mask&&(F=F[0],F!=null)){const k=T.width*T.height,M=new Uint8Array(k);if(Math.abs(F)>1e24)for(d=0;d<k;d++)Math.abs((T.pixels[0][d]-F)/F)>1e-6&&(M[d]=1);else for(d=0;d<k;d++)T.pixels[0][d]!==F&&(M[d]=1);T.mask=M}let S=0,P=0;if(h!==s||f!==a){let k=T.mask;if(k)for(d=0;d<a;d++)if(P=d*s,d<f)for(S=h;S<s;S++)k[P+S]=0;else for(S=0;S<s;S++)k[P+S]=0;else for(k=new Uint8Array(s*a),T.mask=k,d=0;d<f;d++)for(P=d*s,S=0;S<h;S++)k[P+S]=1}return T}async _open(i){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?i.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:s}=this._parseHeader(r.data),{skipMapInfo:a,skipExtensions:n=[]}=this.ioConfig;if(!n.includes("aux.xml")&&!a){const p=await this._fetchAuxiliaryData(i);p!=null&&(t.statistics=p.statistics??t.statistics,t.histograms=p.histograms,p.histograms&&t.statistics==null&&(t.statistics=We(p.histograms)))}a&&this.updateImageSpaceRasterInfo(t),this._set("rasterInfo",t),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=gs(l.data);const{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,m=[],g=this._getBandSegmentCount();let y=0,d=-1;for(;y<this._storageIndex.length;){d++;const p=Math.ceil(h/o/u**d)-1,x=Math.ceil(f/c/u**d)-1;y+=(p+1)*(x+1)*g*4,m.push({maxRow:x,maxCol:p,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}_getBandSegmentCount(){return Z.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,r){const{blockWidth:t,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:n,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,f=0,m=0;for(h=0;h<i;h++)m=a**h,c=Math.ceil(n/t/m),u=Math.ceil(l/s/m),f+=c*u;m=a**i,c=Math.ceil(n/t/m),u=Math.ceil(l/s/m),f+=e*c+r,f*=4*o;const g=this._storageIndex.subarray(f,f+4*o);let y=0,d=0;const p=[];for(let x=0;x<o;x++)y=g[4*x]*2**32+g[4*x+1],d=y+g[4*x+2]*2**32+g[4*x+3],p.push({from:y,to:d});return{ranges:p,actualTileWidth:r<c-1?t:Math.ceil(n/m)-t*(c-1),actualTileHeight:e<u-1?s:Math.ceil(l/m)-s*(u-1)}}_parseHeader(i){const e=U(i,"MRF_META/Raster");if(!e)throw new O("mrf:open","not a valid MRF format");const r=U(e,"Size"),t=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),n=(Y(e,"Compression")||"none").toLowerCase();if(!Z.has(n))throw new O("mrf:open","currently does not support compression "+n);const l=Y(e,"DataType")||"UInt8",o=X.get(l);if(o==null)throw new O("mrf:open","currently does not support pixel type "+l);const c=U(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=U(e,"DataValues");let m,g;if(f&&(g=f.getAttribute("NoData"),g!=null&&(m=g.trim().split(" ").map(k=>parseFloat(k)))),U(i,"MRF_META/CachedSource"))throw new O("mrf:open","currently does not support MRF referencing other data files");const y=U(i,"MRF_META/GeoTags"),d=U(y,"BoundingBox");let p,x=!1;if(d!=null){const k=parseFloat(d.getAttribute("minx")),M=parseFloat(d.getAttribute("miny")),z=parseFloat(d.getAttribute("maxx")),C=parseFloat(d.getAttribute("maxy")),$=Y(y,"Projection")||"";let B=A.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const N=Number($.slice(5));isNaN(N)||N===0||(B=new A({wkid:N}))}else B=Te($)??A.WGS84;else x=!0,B=new A({wkid:3857});p=new H(k,M,z,C),p.spatialReference=B}else x=!0,p=new H({xmin:-.5,ymin:.5-s,xmax:t-.5,ymax:.5,spatialReference:new A({wkid:3857})});const w=U(i,"MRF_META/Rsets"),b=parseInt((w==null?void 0:w.getAttribute("scale"))||"2",10),_=p.spatialReference,v=new ve({origin:new J({x:p.xmin,y:p.ymax,spatialReference:_}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:n,pyramidScalingFactor:b}),T=new J({x:p.width/t,y:p.height/s,spatialReference:_}),F=new Se({width:t,height:s,extent:p,isPseudoSpatialReference:x,spatialReference:_,bandCount:a,pixelType:o,pixelSize:T,noDataValue:m,storageInfo:v}),S=Y(i,"datafile"),P=Y(i,"IndexFile");return{rasterInfo:F,files:{mrf:this.url,index:P||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",Z.get(n).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ue(e)}catch{return null}}};function gs(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,s,a,n;if(Ti){for(r=new Uint8Array(i),s=new ArrayBuffer(i.byteLength),t=new Uint8Array(s),a=0;a<i.byteLength/4;a++)for(n=0;n<4;n++)t[4*a+n]=r[4*a+3-n];e=new Uint32Array(s)}else e=new Uint32Array(i);return e}I([R()],ce.prototype,"_files",void 0),I([R()],ce.prototype,"_storageIndex",void 0),I([R({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=I([K("esri.layers.support.rasterDatasets.MRFRaster")],ce);const xs=ce;function ws(i){const e=i.fields,r=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=s.map(c=>c.name),n=[];let l=0,o=0;return r.forEach(c=>{const u={};for(u[t]=l++,o=1;o<a.length;o++)u[a[o]]=c[o-1];n.push({attributes:u})}),{displayFieldName:"",fields:s,features:n}}class Is{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const s=r.getUint32(4,!0),a=r.getUint16(8,!0),n=r.getUint16(10,!0),l={version:t,recordCount:s,headerByteCount:a,recordByteCount:n};let o=32;const c=[],u=[];let h;if(t===3){for(;r.getUint8(o)!==13;)h=String.fromCharCode(r.getUint8(o+11)).trim(),c.push({name:et(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:r.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<s&&e.byteLength-o>n;){const f=[];r.getUint8(o)===32?(o+=1,c.forEach(m=>{if(m.type==="C")f.push(et(new Uint8Array(e,o,m.length)).trim());else if(m.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if(m.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if(m.type==="D"){const g=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();f.push(new Date(parseInt(g.slice(0,4),10),parseInt(g.slice(4,6),10)-1,parseInt(g.slice(6,8),10)))}o+=m.length}),u.push(f)):o+=n}}return{header:l,fields:c,records:u,recordSet:ws({fields:c,records:u})}}}const Ae=(i,e)=>{var r;return(r=i.get(e))==null?void 0:r.values},de=(i,e)=>{var r,t;return(t=(r=i.get(e))==null?void 0:r.values)==null?void 0:t[0]};let se=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(i,e,r,t={}){var a;if(!((a=this._headerInfo)!=null&&a.isSupported)||this.isBlockOutside(i,e,r))return null;const s=await this._fetchRawTiffTile(i,e,r,!1,t);if(s!=null&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(i,e,r,!0,t);n!=null&&n.pixels[0]instanceof Uint8Array&&(s.mask=n.pixels[0])}return s}async _open(i){var y,d,p,x;const e=i?i.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new O("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:s,isBigTiff:a}=ki(r),n=[];await this._readIFDs(n,r,t,s,0,a?8:4,e);const{imageInfo:l,rasterInfo:o}=bs(n),c=Fi(n),u=Ci(n);if(this._headerInfo={littleEndian:t,isBigTiff:a,ifds:n,pyramidIFDs:c,maskIFDs:u,...l},this._set("rasterInfo",o),!l.isSupported)throw new O("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new O("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&ne.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=(d=(y=n[0].get("PREDICTOR"))==null?void 0:y.values)==null?void 0:d[0];if(((x=(p=n[0].get("SAMPLEFORMAT"))==null?void 0:p.values)==null?void 0:x[0])===3&&h===2)throw new O("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:m,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!m){const w=await this._fetchAuxiliaryMetaData(i);w!=null&&Rs(w,o)}g.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||m||(o.attributeTable=await this._fetchAuxiliaryTable(i),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),m&&this.updateImageSpaceRasterInfo(o),this.updateTileInfo()}async _readIFDs(i,e,r,t,s,a=4,n){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+s,to:t+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=t+s,t=0);const l=await this._readIFD(e,r,t,s,pe.tiffTags,a,n);if(i.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(i,e,r,l.nextIFD-s,s,a,n)}async _readIFD(i,e,r,t,s=pe.tiffTags,a=4,n){var o,c;if(!i)return null;const l=Oi(i,e,r,t,s,a);if(l.success){const u=[];if((o=l.ifd)==null||o.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(m=>m.offlineOffsetSize).filter(Be),f=Math.min.apply(null,h.map(m=>m[0]));if(Math.min.apply(null,h.map(m=>m[0]+m[1]))-f<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:n});i=m,t=f,u.forEach(g=>Pi(i,e,g,t))}}if((c=l.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=l.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const m=f[0]+"."+f[1]+"."+f[2],g=await this._readIFD(i,e,h.valueOffset+6-t,t,pe.geoKeys,2,n);h.data=g.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:n})).data).byteLength<l.requiredBufferSize?null:this._readIFD(i,e,0,t,pe.tiffTags,4,n)}async _fetchRawTiffTile(i,e,r,t,s={}){const a=this._getTileLocation(i,e,r,t);if(!a)return null;const{ranges:n,actualTileWidth:l,actualTileHeight:o,ifd:c}=a,u=n.map(v=>this.request(this.url,{range:v,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),f=h.map(v=>v.data.byteLength).reduce((v,T)=>v+T),m=h.length===1?h[0].data:new ArrayBuffer(f),g=[0],y=[0];if(h.length>1){const v=new Uint8Array(m);for(let T=0,F=0;T<h.length;T++){const S=h[T].data;v.set(new Uint8Array(S),F),g[T]=F,F+=S.byteLength,y[T]=S.byteLength}}const{blockWidth:d,blockHeight:p}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:g,sizes:y},width:d,height:p,planes:null,pixelType:null});if(x==null)return null;let w,b,_;if(l!==d||o!==p){let v=x.mask;if(v)for(w=0;w<p;w++)if(_=w*d,w<o)for(b=l;b<d;b++)v[_+b]=0;else for(b=0;b<d;b++)v[_+b]=0;else for(v=new Uint8Array(d*p),x.mask=v,w=0;w<o;w++)for(_=w*d,b=0;b<l;b++)v[_+b]=1}return x}_getTileLocation(i,e,r,t=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=i===0?0:i-(s-1),{_headerInfo:l}=this;if(!l)return null;const o=t?l.maskIFDs[n]:n===0?l==null?void 0:l.ifds[0]:l==null?void 0:l.pyramidIFDs[n-1];if(!o)return null;const c=Mi(o,l),u=Ae(o,"TILEOFFSETS");if(u===void 0)return null;const h=Ae(o,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:g,maxCol:y}=a[n];if(e>g||r>y||e<f||r<m)return null;const d=de(o,"IMAGEWIDTH"),p=de(o,"IMAGELENGTH"),x=de(o,"TILEWIDTH"),w=de(o,"TILELENGTH"),b=[];if(c){const{bandCount:_}=this.rasterInfo;for(let v=0;v<_;v++){const T=v*(g+1)*(y+1)+e*(y+1)+r;b[v]={from:u[T],to:u[T]+h[T]-1}}}else{const _=e*(y+1)+r;b.push({from:u[_],to:u[_]+h[_]-1})}for(let _=0;_<b.length;_++)if(b[_].from==null||!b[_].to||b[_].to<0)return null;return{ranges:b,ifd:o,actualTileWidth:r===y&&d%x||x,actualTileHeight:e===g&&p%w||w}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ue(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i==null?void 0:i.signal}),r=Is.parse(e);return r!=null&&r.recordSet?je.fromJSON(r.recordSet):null}catch{return null}}};function bs(i){var z,C;const e=$i(i),{width:r,height:t,tileWidth:s,tileHeight:a,planes:n,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:m,tileBoundary:g,affine:y,metadata:d}=e,p=((z=e.extent.spatialReference)==null?void 0:z.wkt)||((C=e.extent.spatialReference)==null?void 0:C.wkid);let x=Te(p),w=!!e.isPseudoGeographic;x==null&&(w=!0,x=new A({wkid:3857}));const b=new H({...e.extent,spatialReference:x}),_=new J(b?{x:b.xmin,y:b.ymax,spatialReference:x}:{x:0,y:0}),v=new ve({blockWidth:s,blockHeight:a,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,origin:_,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:m,blockBoundary:g}),T=new J({x:(b.xmax-b.xmin)/r,y:(b.ymax-b.ymin)/t,spatialReference:x}),F=d?{BandProperties:d.bandProperties,DataType:d.dataType}:{};let S=null;const P=de(i[0],"PHOTOMETRICINTERPRETATION"),k=Ae(i[0],"COLORMAP");if(P<=3&&(k==null?void 0:k.length)>3&&k.length%3==0){S=[];const $=k.length/3;for(let B=0;B<$;B++)S.push([B,k[B]>>>8,k[B+$]>>>8,k[B+2*$]>>>8])}const M=new Se({width:r,height:t,bandCount:n,pixelType:l,pixelSize:T,storageInfo:v,spatialReference:x,isPseudoSpatialReference:w,keyProperties:F,extent:b,colormap:S,statistics:d?d.statistics:null});if(y!=null&&y.length&&(M.nativeExtent=new H({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:x}),M.transform=new Ge({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new J({x:(b.xmax-b.xmin)/r,y:(b.ymax-b.ymin)/t,spatialReference:x}),v.origin.x=-.5,v.origin.y=.5),m){const{x:$,y:B}=M.pixelSize;m.forEach(N=>{N.x*=$,N.y*=B})}return{imageInfo:e,rasterInfo:M}}function Rs(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&e.statistics==null&&(e.statistics=We(i.histograms)),i.transform&&e.transform==null){e.transform=i.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new J({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}I([R()],se.prototype,"_files",void 0),I([R()],se.prototype,"_headerInfo",void 0),I([R()],se.prototype,"_bufferSize",void 0),I([R({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),se=I([K("esri.layers.support.rasterDatasets.TIFFRaster")],se);const vs=se,L=new Map;L.set("MRF",{desc:"Meta Raster Format",constructor:xs}),L.set("TIFF",{desc:"GeoTIFF",constructor:vs}),L.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ys}),L.set("JPG",{desc:"JPG Raster Format",constructor:we}),L.set("PNG",{desc:"PNG Raster Format",constructor:we}),L.set("GIF",{desc:"GIF Raster Format",constructor:we}),L.set("BMP",{desc:"BMP Raster Format",constructor:we}),L.set("CovJSON",{desc:"COVJSON Raster Format",constructor:us}),L.set("MEMORY",{desc:"In Memory Raster Format",constructor:qe});class $e{static get supportedFormats(){const e=new Set;return L.forEach((r,t)=>e.add(t)),e}static async open(e){var h;const{url:r,ioConfig:t,source:s,sourceJSON:a}=e;let n=e.datasetFormat??(t==null?void 0:t.datasetFormat);n==null&&(r.includes(".")?n=r.slice(r.lastIndexOf(".")+1).toUpperCase():((h=s==null?void 0:s.type)==null?void 0:h.toLowerCase())==="coverage"?n="CovJSON":s!=null&&s.extent&&s.pixelblocks&&(n="MEMORY")),n==="OVR"||n==="TIF"?n="TIFF":n==="JPG"||n==="JPEG"||n==="JFIF"?n="JPG":n==="COVJSON"&&(n="CovJSON"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const l={url:r,source:s,sourceJSON:a,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(f=>{l[f]==null&&delete l[f]}),n){if(!this.supportedFormats.has(n))throw new O("rasterfactory:open","not a supported format "+n);if(n==="CRF")throw new O("rasterfactory:open",`cannot open raster: ${r}`);const f=new(L.get(n)).constructor(l);return await f.open({signal:e.signal}),f}const o=Array.from(L.keys()).filter(f=>f!=="CovJSON"&&f!=="Memory");let c=0;const u=()=>{if(n=o[c++],!n||n==="CRF")return null;const f=new(L.get(n)).constructor(l);return f.open({signal:e.signal}).then(()=>f).catch(()=>u())};return u()}static register(e,r,t){L.has(e.toUpperCase())||L.set(e.toUpperCase(),{desc:r,constructor:t})}}let D=class extends Gt(ji(Hi(Wi(ci(jt(rs(qi(Wt(Gi(zt(Nt(Ht)))))))))))){constructor(...i){super(...i),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Et(async(e,r,t)=>{const{save:s,saveAs:a}=await ct(()=>import("./imageryUtils-CBn6Q8pA.js"),__vite__mapDeps([6,7,1,2,8,9,10,11,12,13,14,15,16]));switch(e){case ge.SAVE:return s(this,r);case ge.SAVE_AS:return a(this,t,r)}})}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(Jt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var l,o;const i=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=((l=this.raster)==null?void 0:l.rasterInfo)??this.serviceRasterInfo,r=e==null?void 0:e.attributeTable,t=r!=null?r.fields:null,s="Raster.";if(t){const c=t.filter(u=>u.type!=="oid"&&u.name.toLowerCase()!=="value").map(u=>{const h=u.clone();return h.name=s+u.name,h});i.push(...c)}const a=e==null?void 0:e.dataType,n=e==null?void 0:e.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&n!=null){const c=(o=n.variables[0].unit)==null?void 0:o.trim(),u="Magnitude"+(c?` (${c})`:"");i.push(new ue({name:"Raster.Magnitude",alias:u,domain:null,editable:!1,type:"double"})),i.push(new ue({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(i){const{rasterFields:e}=this,r=(i==null?void 0:i.visibleFieldNames)??new Set(e.map(({name:a})=>a).filter(a=>a.toLowerCase()!=="raster.servicepixelvalue.raw")),t=Vi({fields:e,title:this.title},{...i,visibleFieldNames:r}),{rasterInfo:s}=this.raster;return t!=null&&t.fieldInfos&&(s!=null&&s.pixelType.startsWith("f"))&&t.fieldInfos.forEach(({format:a,fieldName:n})=>{a&&n&&/^raster\.(item|service)pixelvalue/i.test(n)&&(a.places=2)}),t}async generateRasterInfo(i,e){var r;if(i=Le(De,i),await this.load(),!i||((r=i.functionName)==null?void 0:r.toLowerCase())==="none")return this.serviceRasterInfo;try{const{rasterInfo:t}=await this._openFunctionRaster(i,e);return t}catch(t){throw t instanceof O?t:new O("imagery-tile-layer","the given raster function is not supported")}}async save(i){return this._debouncedSaveOperations(ge.SAVE,i)}async saveAs(i,e){return this._debouncedSaveOperations(ge.SAVE_AS,e,i)}write(i,e){const r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e!=null&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new O("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){var t;let e=!1;if(this.raster)await this._openFromRaster(this.raster,i),e=this.raster.datasetFormat==="Function",!e&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:s,rasterFunction:a,source:n}=this;if(!s&&!n)throw new O("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,i):a?await this._openFromUrlWithRasterFunction(s,a,i):await this._openFromUrl(s,i)}const r=this.raster.rasterInfo;if(!r)throw new O("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}else this.read({tileInfo:(t=this.serviceRasterInfo)==null?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(At(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))}async _openFromRaster(i,e){i.rasterInfo||await i.open({signal:e}),this._primaryRasters=i.datasetFormat==="Function"?i.primaryRasters.rasters:[i],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(i,e,r){const t=[i];e&&Li(e.toJSON(),t);const s=await Promise.all(t.map(n=>$e.open({url:n,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:r}))),a=s.findIndex(n=>n==null);if(a>-1)throw new O("imagery-tile-layer:open",`cannot open raster: ${t[a]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)}async _openFromUrl(i,e){const r=await $e.open({url:i,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(r==null)throw new O("imagery-tile-layer:open",`cannot open raster: ${i}`);this._primaryRasters=[r],this.raster=r}async _openFromSource(i,e){var a;const r="the tiled imagery data source is not supported",t=((a=i.type)==null?void 0:a.toLowerCase())==="coverage"?"CovJSON":i.extent&&i.pixelBlock?"MEMORY":null;if(!t)throw new O("imagery-tile-layer:open",r);t==="MEMORY"&&(i={...i,pixelBlock:void 0,pixelBlocks:[i.pixelBlock]});const s=await $e.open({url:"",source:i,datasetFormat:t,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new O("imagery-tile-layer:open",r);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(i,e){var a;const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const t=yt(((a=i.functionDefinition)==null?void 0:a.toJSON())??i.toJSON(),r),s=new gt({rasterFunction:t});return await s.open(e),s}async _initializeWithFunctionRaster(i,e){try{this.raster=await this._openFunctionRaster(i,e)}catch(r){r instanceof O&&ne.getLogger(this).error("imagery-tile-layer:open",r.message),ne.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};I([R({clonable:!1})],D.prototype,"_primaryRasters",void 0),I([R(ui)],D.prototype,"legendEnabled",void 0),I([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],D.prototype,"isReference",void 0),I([R({type:["show","hide"]})],D.prototype,"listMode",void 0),I([R({json:{read:!0,write:!0}})],D.prototype,"blendMode",void 0),I([R()],D.prototype,"sourceJSON",void 0),I([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],D.prototype,"version",void 0),I([R({readOnly:!0,json:{read:!1}})],D.prototype,"type",void 0),I([R({type:["ArcGISTiledImageServiceLayer"]})],D.prototype,"operationalLayerType",void 0),I([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,r){e[r]=!i}}}})],D.prototype,"popupEnabled",void 0),I([R({type:Lt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],D.prototype,"popupTemplate",void 0),I([R({readOnly:!0})],D.prototype,"defaultPopupTemplate",null),I([R({readOnly:!0,type:[ue]})],D.prototype,"fields",void 0),I([R({readOnly:!0,type:[ue]})],D.prototype,"rasterFields",null),I([R({constructOnly:!0})],D.prototype,"source",void 0),D=I([K("esri.layers.ImageryTileLayer")],D);const $r=D;export{$r as default};
