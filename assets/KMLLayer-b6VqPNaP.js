import{by as z,k as J,a7 as V,U as W,M as S,aP as M,dR as E,dS as w,dT as k,g as G,dU as q,aL as A,bV as U,K as D,b9 as _,b6 as $,ba as g,dV as j,w as I,d8 as H,V as O,X as o,Z as l,dW as X,a1 as L,a2 as C,q as Z,a6 as B,a0 as Q}from"./index-BdXiYUWp.js";import{n as Y}from"./CollectionFlattener-AJUiGZuJ.js";import{S as ee,f as te}from"./Layer-DRNUE4qt.js";import{l as re}from"./BlendLayer-D4vXfHoH.js";import{b as se}from"./OperationalLayer-v2pIuPkD.js";import{j as oe}from"./PortalLayer-B8xl0DGJ.js";import{f as ie}from"./RefreshableLayer-DqWc-IWU.js";import{t as le}from"./ScaleRangeLayer-CRHt7veE.js";import{y as ae}from"./commonProperties-WEN-haFZ.js";import"./jsonUtils-CNNEUpfK.js";import"./FeatureSet-DfoJg6qh.js";import"./TimeExtent-DKc53fFR.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BmVJLnp_.js";import"./common-DokbeE9L.js";import"./layerUtils-CRmrchQW.js";import"./PortalItem-B5IuGMHV.js";import"./portalItemUtils-oCxJF8hd.js";import"./projection-sPm_KXQG.js";import"./projectBuffer-CHV26hzf.js";import"./zscale-Q26ExEVF.js";import"./ElevationInfo-PA_JrpTX.js";import"./lengthUtils-CE2XSnNx.js";import"./UniqueValueRenderer-B2SL9Qlr.js";import"./RendererLegendOptions-CSIkgEnl.js";import"./diffUtils-BNnLMjfO.js";import"./enums-BoehirYs.js";import"./colorRamps-C5iTdYfo.js";import"./compilerUtils-B5rIYOON.js";import"./styleUtils-CV5RL6ze.js";import"./defaults-C0xTDeSo.js";import"./defaultsJSON-GKolV7NZ.js";import"./LRUCache-C1crbGkZ.js";import"./Version-CbmqbzHg.js";import"./FieldsIndex-C2YFsm16.js";import"./colorUtils-C14RyZjC.js";import"./vec42-CwZz9wN3.js";import"./vec4f64-CMoMXWBi.js";import"./heatmapUtils-BHUsg2yN.js";import"./Field-16BWPiq_.js";import"./fieldType-D7m7V0MI.js";const ne={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){var d;const t=e.folders||[],r=t.slice(),s=new Map,a=new Map,m=new Map,y=new Map,c=new Map,f={esriGeometryPoint:a,esriGeometryPolyline:m,esriGeometryPolygon:y};(((d=e.featureCollection)==null?void 0:d.layers)||[]).forEach(i=>{const v=S(i);v.featureSet.features=[];const h=i.featureSet.geometryType;s.set(h,v);const b=i.layerDefinition.objectIdField;h==="esriGeometryPoint"?P(a,b,i.featureSet.features):h==="esriGeometryPolyline"?P(m,b,i.featureSet.features):h==="esriGeometryPolygon"&&P(y,b,i.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(i=>{c.set(i.id,i)}),t.forEach(i=>{i.networkLinkIds.forEach(v=>{const h=pe(v,i.id,e.networkLinks);h&&r.push(h)})}),r.forEach(i=>{var v;if(i.featureInfos){i.points=S(s.get("esriGeometryPoint")),i.polylines=S(s.get("esriGeometryPolyline")),i.polygons=S(s.get("esriGeometryPolygon")),i.mapImages=[];for(const h of i.featureInfos)switch(h.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const b=f[h.type].get(h.id);b&&((v=i[ne[h.type]])==null||v.featureSet.features.push(b));break}case"GroundOverlay":{const b=c.get(h.id);b&&i.mapImages.push(b);break}}i.fullExtent=F([i])}});const u=F(r);return{folders:t,sublayers:r,extent:u}}function T(e,t,r,s){var y;const a=(y=J)==null?void 0:y.findCredential(e);e=z(e,{token:a==null?void 0:a.token});const m=V.kmlServiceUrl;return W(m,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function K(e,t,r=null,s=[]){const a=[],m={},y=t.sublayers,c=new Set(t.folders.map(f=>f.id));return y.forEach(f=>{var d;const u=new e;if(r?u.read(f,r):u.read(f),s.length&&c.has(u.id)&&(u.visible=s.includes(u.id)),m[f.id]=u,f.parentFolderId!=null&&f.parentFolderId!==-1){const i=m[f.parentFolderId];i.sublayers||(i.sublayers=[]),(d=i.sublayers)==null||d.unshift(u)}else a.unshift(u)}),a}function P(e,t,r){r.forEach(s=>{e.set(s.attributes[t],s)})}function ue(e,t){let r;return t.some(s=>s.id===e&&(r=s,!0)),r}function pe(e,t,r){const s=ue(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}function F(e){var s,a,m,y,c,f;const t=M(E),r=M(E);for(const u of e){if((a=(s=u.polygons)==null?void 0:s.featureSet)!=null&&a.features)for(const d of u.polygons.featureSet.features)w(t,d.geometry),k(r,t);if((y=(m=u.polylines)==null?void 0:m.featureSet)!=null&&y.features)for(const d of u.polylines.featureSet.features)w(t,d.geometry),k(r,t);if((f=(c=u.points)==null?void 0:c.featureSet)!=null&&f.features)for(const d of u.points.featureSet.features)w(t,d.geometry),k(r,t);if(u.mapImages)for(const d of u.mapImages)w(t,d.extent),k(r,t)}return q(r,E)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:G.WGS84}}var x;let p=x=class extends A.EventedMixin(U(D)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([_(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},g),_(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},g),$(()=>this.sublayers,(t,r)=>{if(r)for(const s of r)s.layer=s.parent=null;if(t)for(const s of t)s.parent=this,s.layer=this.layer},g),$(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},g)])}initialize(){j(()=>this.networkLink).then(()=>j(()=>this.visible===!0)).then(()=>this.load())}load(e){var s;if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(((s=this._get("networkLink"))==null?void 0:s.href)??"",t).then(a=>{var c;const m=F(a.sublayers);this.fullExtent=I.fromJSON(m),this.sourceJSON=a;const y=H(O.ofType(x),K(x,a));this.sublayers?this.sublayers.addMany(y):this.sublayers=y,(c=this.layer)==null||c.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>R(r.data))}};o([l()],p.prototype,"description",void 0),o([l({type:I})],p.prototype,"fullExtent",void 0),o([l()],p.prototype,"id",void 0),o([l({readOnly:!0,value:null})],p.prototype,"networkLink",void 0),o([l({json:{write:{allowNull:!0}}})],p.prototype,"parent",void 0),o([l({type:O.ofType(p),json:{write:{allowNull:!0}}})],p.prototype,"sublayers",void 0),o([l({value:null,json:{read:{source:"name",reader:e=>X(e)}}})],p.prototype,"title",void 0),o([l({value:!0})],p.prototype,"visible",null),o([L("visible",["visibility"])],p.prototype,"readVisible",null),o([l()],p.prototype,"sourceJSON",void 0),o([l()],p.prototype,"layer",void 0),p=x=o([C("esri.layers.support.KMLSublayer")],p);const N=p,ye=["kml","xml"];let n=class extends re(ie(le(se(oe(ee(te)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new Y({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=G.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([$(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},g),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return K(N,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const a=s[0];a.networkLink||(a.visible&&r.push(a.id),a.sublayers&&s.push(...a.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?Z(this.url,ye)||"KML":e}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(B).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=R(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e!=null?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};o([l({readOnly:!0})],n.prototype,"allSublayers",void 0),o([l({type:G})],n.prototype,"outSpatialReference",void 0),o([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),o([l({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),o([l({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),o([l({type:["KML"]})],n.prototype,"operationalLayerType",void 0),o([l({})],n.prototype,"resourceInfo",void 0),o([l({type:O.ofType(N),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),o([L(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),o([L("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),o([Q("sublayers")],n.prototype,"writeSublayers",null),o([l({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),o([l({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),o([l(ae)],n.prototype,"url",void 0),o([l({readOnly:!0})],n.prototype,"visibleSublayers",null),o([l({type:I})],n.prototype,"extent",void 0),o([l()],n.prototype,"fullExtent",null),n=o([C("esri.layers.KMLLayer")],n);const Ye=n;export{Ye as default};
