import{V as f,b6 as T,ba as _,a6 as S,s as b,ca as c,cb as D,t as g,p as L,c3 as v,c1 as w,c4 as E,cc as A,ah as C,X as s,Z as h,a1 as N,a0 as k,a2 as $}from"./index-DMwY2Yeh.js";import{S as I,f as R}from"./Layer-B7MPCWr8.js";import{n as G}from"./uuid-Cl5lrJ4c.js";import{u,c as M,E as O,F as U,R as F}from"./KnowledgeGraphSublayer-DzJ97yJG.js";import{l as j}from"./ArcGISService-DfIkeWvW.js";import{l as P}from"./BlendLayer-BZi4HZ3X.js";import{e as z}from"./CustomParametersMixin-D4WPrEFl.js";import{b as x}from"./OperationalLayer-DkH5aW2U.js";import{j as K}from"./PortalLayer-DdSdd8Dt.js";import{f as H}from"./RefreshableLayer-KOp797qb.js";import{t as V}from"./ScaleRangeLayer-BawLb3lW.js";import{y as B}from"./commonProperties-BfyFIYkl.js";import{F as X}from"./knowledgeGraphService-Bp3kBTAY.js";import"./TimeExtent-D_QVyVxF.js";import"./labelUtils-C913L2yL.js";import"./projection-DL1aNLQS.js";import"./projectBuffer-CWX1J5rk.js";import"./zscale-DcxcvFoT.js";import"./featureConversionUtils-XDJcSzWE.js";import"./OptimizedFeature-D3320lj0.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./GraphicsLayer-CeGiE8i_.js";import"./ElevationInfo-BPUkZdoe.js";import"./lengthUtils-DPy0fDMV.js";import"./Relationship-DzGN-dkw.js";import"./Query-Dd46G94Q.js";import"./Field-FlLvuz43.js";import"./fieldType-C6h0mWzJ.js";import"./UniqueValueRenderer-BWeIsITM.js";import"./RendererLegendOptions-wLw-yCIt.js";import"./diffUtils-BNvOWYG7.js";import"./enums-BoehirYs.js";import"./colorRamps-D2x6Yad2.js";import"./compilerUtils-RCjhmI8-.js";import"./styleUtils-BSN3jcA_.js";import"./layerUtils-Co4QOtAn.js";import"./defaults-BtwZGStO.js";import"./defaultsJSON-GKolV7NZ.js";import"./jsonUtils-h7tU0Uer.js";import"./LRUCache-BZgFsCAB.js";import"./Version-DMGHCpYW.js";import"./FieldsIndex-Bpsh9sfE.js";import"./colorUtils-BPNTvscP.js";import"./vec42-CwZz9wN3.js";import"./common-DokbeE9L.js";import"./vec4f64-CMoMXWBi.js";import"./heatmapUtils-BzMZhmln.js";import"./workers-CugKOIjN.js";import"./FeatureStore-RupCatHG.js";import"./BoundsStore-BlsL-ylb.js";import"./PooledRBush-B0deq4V0.js";import"./quickselect-QQC62dOK.js";import"./QueryEngine-LNvuRMq0.js";import"./normalizeUtils-tYwCoEfv.js";import"./normalizeUtilsCommon-Dh7MTQbs.js";import"./utils-Sq5BbeZP.js";import"./utils-BQm91vBd.js";import"./WhereClause-BPNiQ3zv.js";import"./TimeOnly-tMUNIzIb.js";import"./queryUtils-B_TMEvth.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-17dwe5XF.js";import"./Basemap-BELjkky8.js";import"./loadAll-Co2z4j4H.js";import"./PortalItem-CJdFYfTh.js";import"./writeUtils-Ba9PeG6C.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DsYZliz4.js";import"./utils-ClehEbQ3.js";import"./ClassBreaksDefinition-C_aHv-ic.js";import"./signal-PJgyBLag.js";import"./time-ClENgjgA.js";import"./optimizedFeatureQueryEngineAdapter-CmX4DFTl.js";import"./clientSideDefaults-kOqGchzZ.js";import"./capabilities-D6exRNM4.js";import"./fieldProperties-ToAvmRQ-.js";import"./FeatureEffectLayer-DJvLedEL.js";import"./FeatureReductionLayer-BJl1hgu6.js";import"./FeatureReductionSelection-D7R64uU4.js";import"./labelingInfo-DW8snHub.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-C_Azou6p.js";import"./TemporalLayer-DyyQYNf6.js";import"./TimeInfo-Bc08AgQt.js";import"./FeatureSet-1CBcRwmx.js";import"./popupUtils-DpbfCD_q.js";import"./arcgisLayerUrl-C2XR9Yu_.js";import"./portalItemUtils-Doqe9RdJ.js";let r=class extends P(V(H(j(x(K(I(z(R)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(u)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(u)),this.type="knowledge-graph",this.url=null,this.addHandles(T(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),_))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){S(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),await M(this)}async _fetchMetadata(){if(!this.url)throw new b("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await X(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===c.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new O({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await U(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,D(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,a)=>{const o=this._graphTypeLookup.get(a);if(!o)return g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(a);o.type!=="relationship"&&o.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(a))});else if(!e.generateAllSublayers)throw new b("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var o,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,a=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((o=this.knowledgeGraph.dataModel)==null?void 0:o.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,d)=>{const l=this._graphTypeLookup.get(d);switch(l==null?void 0:l.type){case"relationship":t.push(l);break;case"entity":e.push(l)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const a=this._graphTypeLookup.get(i);a&&(this._addSublayer(a),a.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}await M(this,t),this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(a=>{const o=this._createSublayer(a);i(o)&&t.push(o),this._updateSublayerCaches(a)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new u({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(o=>o.type===i.graphType&&o.name===i.graphTypeName);a&&(i.objectType=a,this._updateSublayerCaches(a))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,a){e[t]="<pending>",i.pendingOperations.push(Y(this.inclusionModeDefinition).then(o=>{const n=Z(a);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:o},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}readDefinitionSetMap(e,t,i){return L(e,i)}writeDefinitionSetMap(e,t,i,a){const o=a==null?void 0:a.portalItem,n=a==null?void 0:a.resources,p=v(a==null?void 0:a.origin);if(!o||!n||p==null)return void(e&&(t[i]=w(e,a)));const{inclusionModeDefinition:d}=this;if(!d||this._displaysAllRecords(d))return void(this.definitionSetMap=null);const l=this.originIdOf("inclusionModeDefinition");if(l===c.USER||this._namedTypesModified||p<l)this._saveUrlAsNewResource(t,i,n,o);else if(p===l&&e){const y=w(e,a);E(y)?this._saveUrlAsNewResource(t,i,n,o):t[i]=y}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===c.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===c.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,o)=>{var p;const n=A(this.sublayerIdsCache,o,()=>new Set);(p=a.members)==null||p.forEach(d=>{n.add(d.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,a,o,n,p,d,l,y;const t=[];for(const m of e)((o=(a=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:a.get(m.typeName))==null?void 0:o.useAllData)===!1&&((l=(d=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(m.typeName))==null?void 0:d.members)!=null&&l.has(m.id))&&t.push(m);this.dataManager.removeFromLayer(t);for(const m of t)(y=this.sublayerIdsCache.get(m.typeName))==null||y.delete(m.id);return this._refreshNamedTypes(),t}};s([h()],r.prototype,"dataManager",void 0),s([h({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],r.prototype,"definitionSetMap",void 0),s([N("definitionSetMap")],r.prototype,"readDefinitionSetMap",null),s([k("definitionSetMap")],r.prototype,"writeDefinitionSetMap",null),s([h()],r.prototype,"inclusionModeDefinition",null),s([h()],r.prototype,"knowledgeGraph",void 0),s([h({type:f.ofType(u),json:{write:{ignoreOrigin:!0}}})],r.prototype,"layers",void 0),s([h()],r.prototype,"memberEntityTypes",void 0),s([h()],r.prototype,"memberRelationshipTypes",void 0),s([h({type:["KnowledgeGraphLayer"]})],r.prototype,"operationalLayerType",void 0),s([h()],r.prototype,"sublayerIdsCache",void 0),s([h({type:f.ofType(u),json:{write:{ignoreOrigin:!0}}})],r.prototype,"tables",void 0),s([h({json:{read:!1}})],r.prototype,"type",void 0),s([h(B)],r.prototype,"url",void 0),r=s([$("esri.layers.KnowledgeGraphLayer")],r);const kt=r;async function Y(e){const t=await F(e);return new Blob([t],{type:"application/x-protobuf"})}function Z(e){const t=`definitionSetMap-${G()}.dat`,i=C("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{kt as default};
