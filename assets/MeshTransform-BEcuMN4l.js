import{U as G,a4 as q,bL as Z,d3 as z,dH as C,dI as D,dJ as J,bZ as O,P as K,aG as L,dK as W,bA as X,bB as f,X as a,Z as u,a2 as E}from"./index-BdXiYUWp.js";import{c as Q,p as R}from"./infoFor3D-CxdEiWhp.js";import{j as V,P as Y,h as _,B as tt}from"./mat4-BmVJLnp_.js";import{e as N}from"./mat4f64-CSKppSlJ.js";import{b as m,x as rt,v as S}from"./quat-DBcihcjk.js";import{e as b}from"./quatf64-aQ5IuZRd.js";import{s as st}from"./vec32-CJnU2VkQ.js";class F{constructor(r,s,e){this.assetName=r,this.assetMimeType=s,this.parts=e}equals(r){return this===r||this.assetName===r.assetName&&this.assetMimeType===r.assetMimeType&&Z(this.parts,r.parts,(s,e)=>s.equals(e))}isOnService(r){return this.parts.every(s=>s.isOnService(r))}makeHash(){let r="";for(const s of this.parts)r+=s.partHash;return r}async toBlob(r){const{parts:s}=this;if(s.length===1)return s[0].toBlob(r);const e=await Promise.all(s.map(c=>c.toBlob(r)));return q(r),new Blob(e)}}class ht{constructor(r,s){this.partUrl=r,this.partHash=s}equals(r){return this===r||this.partUrl===r.partUrl&&this.partHash===r.partHash}isOnService(r){return this.partUrl.startsWith(`${r.path}/assets/`)}async toBlob(r){const{data:s}=await G(this.partUrl,{responseType:"blob"});return q(r),s}}function mt(t){return et(t==null?void 0:t.source)}function d(t){return Array.isArray(t)?t.every(r=>r instanceof F):!1}const x=/^(model\/gltf\+json)|(model\/gltf-binary)$/,v=/\.(gltf|glb)/i;function et(t){return t?Array.isArray(t)?t.some(M):M(t):!1}function M(t){if(t instanceof File){const{type:r,name:s}=t;return x.test(r)||v.test(s)}return x.test(t.assetMimeType)||v.test(t.assetName)}function yt(t,r){if(!t)return!1;const{source:s}=t;return nt(s,r)}function $t(t,r){if(t===r)return!0;const{source:s}=t,{source:e}=r;if(s===e)return!0;if(d(s)&&d(e)){if(s.length!==e.length)return!1;const c=(i,g)=>i.assetName<g.assetName?-1:i.assetName>g.assetName?1:0,A=[...s].sort(c),k=[...e].sort(c);for(let i=0;i<A.length;++i)if(!A[i].equals(k[i]))return!1;return!0}return!1}function nt(t,r){if(Array.isArray(t)){const s=t;return s.length>0&&s.every(e=>w(e,r))}return w(t,r)}function w(t,r){return t instanceof F&&t.isOnService(r)}function bt(t,r){return t instanceof File?Q(t,r):R(t.assetMimeType,t.assetName,r)}function At(t){return Array.isArray(t)?t:[t]}function gt(t){return!!t.original}function o(t=P){return[t[0],t[1],t[2],t[3]]}function h(t,r,s=o()){return st(s,t),s[3]=r,s}function Nt(t,r=o()){const s=V(l,t);return I(r,O(S(r,s))),r}function B(t,r,s=o()){return m(l,t,y(t)),m(j,r,y(r)),rt(l,j,l),I(s,O(S(s,l)))}function dt(t,r,s,e=o()){return h(C,t,p),h(D,r,U),h(J,s,H),B(p,U,p),B(p,H,e),e}function xt(t){return t}function at(t){return t[3]}function y(t){return z(t[3])}function I(t,r){return t[3]=r,t}const P=[0,0,1,0],l=b(),j=b();o();const p=o(),U=o(),H=o();var $;let n=$=class extends K{constructor(t){super(t),this.translation=L(),this.rotationAxis=W(P),this.rotationAngle=0,this.scale=X(1,1,1)}get rotation(){return h(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=f(t),this.rotationAngle=at(t)}get localMatrix(){const t=N();return m(T,this.rotation,y(this.rotation)),Y(t,T,this.translation,this.scale),t}get localMatrixInverse(){return _(N(),this.localMatrix)}equals(t){return this===t||t!=null&&tt(this.localMatrix,t.localMatrix)}clone(){const t={translation:f(this.translation),rotationAxis:f(this.rotationAxis),rotationAngle:this.rotationAngle,scale:f(this.scale)};return new $(t)}};a([u({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"translation",void 0),a([u({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"rotationAxis",void 0),a([u({type:Number,nonNullable:!0,json:{write:!0}})],n.prototype,"rotationAngle",void 0),a([u({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"scale",void 0),a([u()],n.prototype,"rotation",null),a([u()],n.prototype,"localMatrix",null),a([u()],n.prototype,"localMatrixInverse",null),n=$=a([E("esri.geometry.support.MeshTransform")],n);const T=b(),vt=n;export{gt as A,vt as N,F as a,At as b,bt as c,dt as d,$t as h,ht as i,o as j,Nt as k,yt as m,mt as o,xt as w,y as z};
