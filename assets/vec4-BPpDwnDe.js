import{t as P}from"./index-BdXiYUWp.js";const T=()=>P.getLogger("esri.views.3d.support.buffer.math");function k(e,n,t){if(e.count!==n.count)return;const o=e.count,c=t[0],i=t[1],l=t[2],u=t[3],f=t[4],r=t[5],a=t[6],p=t[7],y=t[8],v=t[9],B=t[10],h=t[11],m=t[12],z=t[13],w=t[14],_=t[15],d=e.typedBuffer,O=e.typedBufferStride,s=n.typedBuffer,j=n.typedBufferStride;for(let V=0;V<o;V++){const g=V*O,S=V*j,M=s[S],b=s[S+1],$=s[S+2],q=s[S+3];d[g]=c*M+f*b+y*$+m*q,d[g+1]=i*M+r*b+v*$+z*q,d[g+2]=l*M+a*b+B*$+w*q,d[g+3]=u*M+p*b+h*$+_*q}}function A(e,n,t,o=4,c=o){if(e.length/o!=n.length/c)return void T().error("source and destination buffers need to have the same number of elements");const i=e.length/o,l=t[0],u=t[1],f=t[2],r=t[3],a=t[4],p=t[5],y=t[6],v=t[7],B=t[8],h=t[9],m=t[10],z=t[11],w=t[12],_=t[13],d=t[14],O=t[15];let s=0,j=0;for(let V=0;V<i;V++){const g=n[s],S=n[s+1],M=n[s+2],b=n[s+3];e[j]=l*g+a*S+B*M+w*b,e[j+1]=u*g+p*S+h*M+_*b,e[j+2]=f*g+y*S+m*M+d*b,e[j+3]=r*g+v*S+z*M+O*b,s+=c,j+=o}}function C(e,n,t){x(e.typedBuffer,n.typedBuffer,t,e.typedBufferStride,n.typedBufferStride)}function x(e,n,t,o=4,c=o){if(e.length/o!=n.length/c)return;const i=e.length/o,l=t[0],u=t[1],f=t[2],r=t[3],a=t[4],p=t[5],y=t[6],v=t[7],B=t[8];let h=0,m=0;for(let z=0;z<i;z++){const w=n[h],_=n[h+1],d=n[h+2],O=n[h+3];e[m]=l*w+r*_+y*d,e[m+1]=u*w+a*_+v*d,e[m+2]=f*w+p*_+B*d,e[m+3]=O,h+=c,m+=o}}function D(e,n){const t=Math.min(e.count,n.count),o=e.typedBuffer,c=e.typedBufferStride,i=n.typedBuffer,l=n.typedBufferStride;for(let u=0;u<t;u++){const f=u*c,r=u*l,a=i[r],p=i[r+1],y=i[r+2],v=a*a+p*p+y*y;if(v>0){const B=1/Math.sqrt(v);o[f]=B*a,o[f+1]=B*p,o[f+2]=B*y}}}function E(e,n,t){L(e.typedBuffer,n,t,e.typedBufferStride)}function L(e,n,t,o=4){const c=Math.min(e.length/o,n.count),i=n.typedBuffer,l=n.typedBufferStride;let u=0,f=0;for(let r=0;r<c;r++)e[f]=t*i[u],e[f+1]=t*i[u+1],e[f+2]=t*i[u+2],e[f+3]=t*i[u+3],u+=l,f+=o}Object.freeze(Object.defineProperty({__proto__:null,normalize:D,scale:L,scaleView:E,transformMat3:x,transformMat3View:C,transformMat4:A,transformMat4View:k},Symbol.toStringTag,{value:"Module"}));export{C as f,x as n,D as o,L as s,E as u};
