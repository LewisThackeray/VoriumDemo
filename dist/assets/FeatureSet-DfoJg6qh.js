import{P,g as w,as as S,H as F,f as j,M as q,B as v,X as h,Z as d,a1 as T,a0 as N,at as J,a2 as M}from"./index-BdXiYUWp.js";import{y as O}from"./Field-16BWPiq_.js";var G;const z=new F({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let c=G=class extends P{constructor(n){super(n),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(n,a){var s;const o=w.fromJSON(a.spatialReference),e=[];for(let t=0;t<n.length;t++){const l=n[t],u=S.fromJSON(l),f=(s=l.geometry)==null?void 0:s.spatialReference;u.geometry==null||f||(u.geometry.spatialReference=o);const r=l.aggregateGeometries,y=u.aggregateGeometries;if(r&&y!=null)for(const i in y){const m=y[i],g=r[i],p=g==null?void 0:g.spatialReference;m==null||p||(m.spatialReference=o)}e.push(u)}return e}writeGeometryType(n,a,o,e){if(n)return void z.write(n,a,o,e);const{features:s}=this;if(s){for(const t of s)if((t==null?void 0:t.geometry)!=null)return void z.write(t.geometry.type,a,o,e)}}readQueryGeometry(n,a){if(!n)return null;const o=!!n.spatialReference,e=j(n);return e&&!o&&a.spatialReference&&(e.spatialReference=w.fromJSON(a.spatialReference)),e}writeSpatialReference(n,a){if(n)return void(a.spatialReference=n.toJSON());const{features:o}=this;if(o){for(const e of o)if(e&&e.geometry!=null&&e.geometry.spatialReference)return void(a.spatialReference=e.geometry.spatialReference.toJSON())}}clone(){return new G(this.cloneProperties())}cloneProperties(){return q({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(n){const a=this.write();if(a.features&&Array.isArray(n)&&n.length>0)for(let o=0;o<a.features.length;o++){const e=a.features[o];if(e.geometry){const s=n==null?void 0:n[o];e.geometry=(s==null?void 0:s.toJSON())||e.geometry}}return a}quantize(n){const{scale:[a,o],translate:[e,s]}=n,t=r=>Math.round((r-e)/a),l=r=>Math.round((s-r)/o),u=this.features,f=this._getQuantizationFunction(this.geometryType,t,l);for(let r=0,y=u.length;r<y;r++)f!=null&&f(u[r].geometry)||(u.splice(r,1),r--,y--);return this.transform=n,this}unquantize(){var m,g;const{geometryType:n,features:a,transform:o}=this;if(!o)return this;const{translate:[e,s],scale:[t,l]}=o,u=p=>p*t+e,f=p=>s-p*l;let r=null,y=null;if(this.hasZ&&((m=o==null?void 0:o.scale)==null?void 0:m[2])!=null){const{translate:[,,p],scale:[,,R]}=o;r=x=>x*R+p}if(this.hasM&&((g=o==null?void 0:o.scale)==null?void 0:g[3])!=null){const{translate:[,,,p],scale:[,,,R]}=o;y=x=>x==null?x:x*R+p}const i=this._getHydrationFunction(n,u,f,r,y);for(const{geometry:p}of a)p!=null&&i&&i(p);return this.transform=null,this}_quantizePoints(n,a,o){let e,s;const t=[];for(let l=0,u=n.length;l<u;l++){const f=n[l];if(l>0){const r=a(f[0]),y=o(f[1]);r===e&&y===s||(t.push([r-e,y-s]),e=r,s=y)}else e=a(f[0]),s=o(f[1]),t.push([e,s])}return t.length>0?t:null}_getQuantizationFunction(n,a,o){return n==="point"?e=>(e.x=a(e.x),e.y=o(e.y),e):n==="polyline"||n==="polygon"?e=>{const s=v(e)?e.rings:e.paths,t=[];for(let l=0,u=s.length;l<u;l++){const f=s[l],r=this._quantizePoints(f,a,o);r&&t.push(r)}return t.length>0?(v(e)?e.rings=t:e.paths=t,e):null}:n==="multipoint"?e=>{const s=this._quantizePoints(e.points,a,o);return s&&s.length>0?(e.points=s,e):null}:n==="extent"?e=>e:null}_getHydrationFunction(n,a,o,e,s){return n==="point"?t=>{t.x=a(t.x),t.y=o(t.y),e&&(t.z=e(t.z))}:n==="polyline"||n==="polygon"?t=>{const l=v(t)?t.rings:t.paths;let u,f;for(let r=0,y=l.length;r<y;r++){const i=l[r];for(let m=0,g=i.length;m<g;m++){const p=i[m];m>0?(u+=p[0],f+=p[1]):(u=p[0],f=p[1]),p[0]=a(u),p[1]=o(f)}}if(e&&s)for(let r=0,y=l.length;r<y;r++){const i=l[r];for(let m=0,g=i.length;m<g;m++){const p=i[m];p[2]=e(p[2]),p[3]=s(p[3])}}else if(e)for(let r=0,y=l.length;r<y;r++){const i=l[r];for(let m=0,g=i.length;m<g;m++){const p=i[m];p[2]=e(p[2])}}else if(s)for(let r=0,y=l.length;r<y;r++){const i=l[r];for(let m=0,g=i.length;m<g;m++){const p=i[m];p[2]=s(p[2])}}}:n==="extent"?t=>{t.xmin=a(t.xmin),t.ymin=o(t.ymin),t.xmax=a(t.xmax),t.ymax=o(t.ymax),e&&t.zmax!=null&&t.zmin!=null&&(t.zmax=e(t.zmax),t.zmin=e(t.zmin)),s&&t.mmax!=null&&t.mmin!=null&&(t.mmax=s(t.mmax),t.mmin=s(t.mmin))}:n==="multipoint"?t=>{const l=t.points;let u,f;for(let r=0,y=l.length;r<y;r++){const i=l[r];r>0?(u+=i[0],f+=i[1]):(u=i[0],f=i[1]),i[0]=a(u),i[1]=o(f)}if(e&&s)for(let r=0,y=l.length;r<y;r++){const i=l[r];i[2]=e(i[2]),i[3]=s(i[3])}else if(e)for(let r=0,y=l.length;r<y;r++){const i=l[r];i[2]=e(i[2])}else if(s)for(let r=0,y=l.length;r<y;r++){const i=l[r];i[2]=s(i[2])}}:null}};h([d({type:String,json:{write:!0}})],c.prototype,"displayFieldName",void 0),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"exceededTransferLimit",void 0),h([d({type:[S],json:{write:!0}})],c.prototype,"features",void 0),h([T("features")],c.prototype,"readFeatures",null),h([d({type:[O],json:{write:!0}})],c.prototype,"fields",void 0),h([d({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:z.read}}})],c.prototype,"geometryType",void 0),h([N("geometryType")],c.prototype,"writeGeometryType",null),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"hasM",void 0),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"hasZ",void 0),h([d({types:J,json:{write:!0}})],c.prototype,"queryGeometry",void 0),h([T("queryGeometry")],c.prototype,"readQueryGeometry",null),h([d({type:w,json:{write:!0}})],c.prototype,"spatialReference",void 0),h([N("spatialReference")],c.prototype,"writeSpatialReference",null),h([d({json:{write:!0}})],c.prototype,"transform",void 0),c=G=h([M("esri.rest.support.FeatureSet")],c),c.prototype.toJSON.isDefaultToJSON=!0;const Z=c;export{Z as d};
