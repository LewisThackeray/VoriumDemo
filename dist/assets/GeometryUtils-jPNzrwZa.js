import{dF as z}from"./index-DMwY2Yeh.js";const H=512,A=29,G=24;var L;(function(_){_[_.FilterFlags=0]="FilterFlags",_[_.Animation=1]="Animation",_[_.GPGPU=2]="GPGPU",_[_.VV=3]="VV",_[_.DD0=4]="DD0",_[_.DD1=5]="DD1",_[_.DD2=6]="DD2",_[_.LocalTimeOrigin=7]="LocalTimeOrigin"})(L||(L={}));const O=6,U=1.05,C=2,j=10,J=256,K=32,W=512,S=512;var P,f;(function(_){_[_.Unknown=0]="Unknown",_[_.Point=1]="Point",_[_.LineString=2]="LineString",_[_.Polygon=3]="Polygon"})(P||(P={}));let g=class D{constructor(t,i){this.x=t,this.y=i}clone(){return new D(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){return this.x=t,this.y=i,this}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);return this.x/=s,this.y/=s,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,i){return this.x+=t,this.y+=i,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}assignSub(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}rotate(t,i){const s=this.x,h=this.y;return this.x=s*t-h*i,this.y=s*i+h*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new D(t.x+i.x,t.y+i.y)}static sub(t,i){return new D(t.x-i.x,t.y-i.y)}};class v{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}let Y=class{constructor(t,i,s,h=8,n=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=n,this._tileSize=S*h,this._dz=t,this._yPos=i,this._xPos=s}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new g(t,i),this._firstPt=new g(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),h=new g(t,i),n=g.distance(this._prevPt,h);let e,r,l,a,d,m,y,p;if(s)this._prevIsIn?this._lineTo(t,i,!0):(e=this._prevPt,r=h,l=this._intersect(r,e),this._start=this._dist+n*(1-this._r),this._lineTo(l.x,l.y,!0),this._lineTo(r.x,r.y,!0));else if(this._prevIsIn)r=this._prevPt,e=h,l=this._intersect(r,e),this._lineTo(l.x,l.y,!0),this._lineTo(e.x,e.y,!1);else{const x=this._prevPt,o=h;if(x.x<=this._xmin&&o.x<=this._xmin||x.x>=this._xmax&&o.x>=this._xmax||x.y<=this._ymin&&o.y<=this._ymin||x.y>=this._ymax&&o.y>=this._ymax)this._lineTo(o.x,o.y,!1);else{const c=[];if((x.x<this._xmin&&o.x>this._xmin||x.x>this._xmin&&o.x<this._xmin)&&(a=(this._xmin-x.x)/(o.x-x.x),p=x.y+a*(o.y-x.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new v(a,this._xmin,p))),(x.x<this._xmax&&o.x>this._xmax||x.x>this._xmax&&o.x<this._xmax)&&(a=(this._xmax-x.x)/(o.x-x.x),p=x.y+a*(o.y-x.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new v(a,this._xmax,p))),(x.y<this._ymin&&o.y>this._ymin||x.y>this._ymin&&o.y<this._ymin)&&(a=(this._ymin-x.y)/(o.y-x.y),y=x.x+a*(o.x-x.x),y<=this._xmin?d=!1:y>=this._xmax?d=!0:c.push(new v(a,y,this._ymin))),(x.y<this._ymax&&o.y>this._ymax||x.y>this._ymax&&o.y<this._ymax)&&(a=(this._ymax-x.y)/(o.y-x.y),y=x.x+a*(o.x-x.x),y<=this._xmin?d=!1:y>=this._xmax?d=!0:c.push(new v(a,y,this._ymax))),c.length===0)d?m?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):m?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(c.length>1&&c[0].ratio>c[1].ratio)this._start=this._dist+n*c[1].ratio,this._lineTo(c[1].x,c[1].y,!0),this._lineTo(c[0].x,c[0].y,!0);else{this._start=this._dist+n*c[0].ratio;for(let u=0;u<c.length;u++)this._lineTo(c[u].x,c[u].y,!0)}this._lineTo(o.x,o.y,!1)}}this._dist+=n,this._prevIsIn=s,this._prevPt=h}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(t=!0){return this._pushLine(),this._lines.length===0?null:(this._type===P.Polygon&&t&&V.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==P.LineString)throw new Error("Only valid for lines");this._pushLine();const t=this._lines,i=t.length;if(i===0)return null;const s=[];for(let h=0;h<i;h++)s.push({line:t[h],start:this._starts[h]||0});return s}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let s,h,n;if(i.x>=this._xmin&&i.x<=this._xmax)h=i.y<=this._ymin?this._ymin:this._ymax,n=(h-t.y)/(i.y-t.y),s=t.x+n*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)s=i.x<=this._xmin?this._xmin:this._xmax,n=(s-t.x)/(i.x-t.x),h=t.y+n*(i.y-t.y);else{h=i.y<=this._ymin?this._ymin:this._ymax,s=i.x<=this._xmin?this._xmin:this._xmax;const e=(s-t.x)/(i.x-t.x),r=(h-t.y)/(i.y-t.y);e<r?(n=e,h=t.y+e*(i.y-t.y)):(n=r,s=t.x+r*(i.x-t.x))}return this._r=n,new g(s,h)}_pushLine(){this._line&&(this._type===P.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===P.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===P.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(t,i,s){this._type!==P.Polygon?s&&(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(t,i))):(s||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),i<this._ymin&&(i=this._ymin),i>this._ymax&&(i=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(t,i)),this._isH=!1,this._isV=!1)}_lineTo(t,i,s){let h,n;if(this._type!==P.Polygon)if(s){if(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(h=this._line[this._line.length-1],h.equals(t,i)))return;this._line.push(new g(t,i))}else this._line&&this._line.length>0&&this._pushLine();else if(s||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),i<this._ymin&&(i=this._ymin),i>this._ymax&&(i=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),i=Math.round((i-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){h=this._line[this._line.length-1];const e=h.x===t,r=h.y===i;if(e&&r)return;this._isH&&e||this._isV&&r?(h.x=t,h.y=i,n=this._line[this._line.length-2],n.x===t&&n.y===i?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(n=this._line[this._line.length-2],this._isH=n.x===t,this._isV=n.y===i)):(this._isH=n.x===t,this._isV=n.y===i)):(this._line.push(new g(t,i)),this._isH=e,this._isV=r)}else this._line.push(new g(t,i))}};class X{setExtent(t){this._ratio=t===4096?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new g(t*s,i*s))}lineTo(t,i){const s=this._ratio;this._line.push(new g(t*s,i*s))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),this._lines.length===0?null:this._lines}}(function(_){_[_.sideLeft=0]="sideLeft",_[_.sideRight=1]="sideRight",_[_.sideTop=2]="sideTop",_[_.sideBottom=3]="sideBottom"})(f||(f={}));let V=class T{static simplify(t,i,s){if(!s)return;const h=-i,n=t+i,e=-i,r=t+i,l=[],a=[],d=s.length;for(let y=0;y<d;++y){const p=s[y];if(!p||p.length<2)continue;let x,o=p[0];const c=p.length;for(let u=1;u<c;++u)x=p[u],o.x===x.x&&(o.x<=h&&(o.y>x.y?(l.push(y),l.push(u),l.push(f.sideLeft),l.push(-1)):(a.push(y),a.push(u),a.push(f.sideLeft),a.push(-1))),o.x>=n&&(o.y<x.y?(l.push(y),l.push(u),l.push(f.sideRight),l.push(-1)):(a.push(y),a.push(u),a.push(f.sideRight),a.push(-1)))),o.y===x.y&&(o.y<=e&&(o.x<x.x?(l.push(y),l.push(u),l.push(f.sideTop),l.push(-1)):(a.push(y),a.push(u),a.push(f.sideTop),a.push(-1))),o.y>=r&&(o.x>x.x?(l.push(y),l.push(u),l.push(f.sideBottom),l.push(-1)):(a.push(y),a.push(u),a.push(f.sideBottom),a.push(-1)))),o=x}if(l.length===0||a.length===0)return;T.fillParent(s,a,l),T.fillParent(s,l,a);const m=[];T.calcDeltas(m,a,l),T.calcDeltas(m,l,a),T.addDeltas(m,s)}static fillParent(t,i,s){const h=s.length,n=i.length;for(let e=0;e<n;e+=4){const r=i[e],l=i[e+1],a=i[e+2],d=t[r][l-1],m=t[r][l];let y=8092,p=-1;for(let x=0;x<h;x+=4){if(s[x+2]!==a)continue;const o=s[x],c=s[x+1],u=t[o][c-1],w=t[o][c];switch(a){case f.sideLeft:case f.sideRight:if(I(d.y,u.y,w.y)&&I(m.y,u.y,w.y)){const M=Math.abs(w.y-u.y);M<y&&(y=M,p=x)}break;case f.sideTop:case f.sideBottom:if(I(d.x,u.x,w.x)&&I(m.x,u.x,w.x)){const M=Math.abs(w.x-u.x);M<y&&(y=M,p=x)}}}i[e+3]=p}}static calcDeltas(t,i,s){const h=i.length;for(let n=0;n<h;n+=4){const e=[],r=T.calcDelta(n,i,s,e);t.push(i[n]),t.push(i[n+1]),t.push(i[n+2]),t.push(r)}}static calcDelta(t,i,s,h){const n=i[t+3];if(n===-1)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),T.calcDelta(n,s,i,h)+1)}static addDeltas(t,i){const s=t.length;let h=0;for(let n=0;n<s;n+=4){const e=t[n+3];e>h&&(h=e)}for(let n=0;n<s;n+=4){const e=i[t[n]],r=t[n+1],l=h-t[n+3];switch(t[n+2]){case f.sideLeft:e[r-1].x-=l,e[r].x-=l,r===1&&(e[e.length-1].x-=l),r===e.length-1&&(e[0].x-=l);break;case f.sideRight:e[r-1].x+=l,e[r].x+=l,r===1&&(e[e.length-1].x+=l),r===e.length-1&&(e[0].x+=l);break;case f.sideTop:e[r-1].y-=l,e[r].y-=l,r===1&&(e[e.length-1].y-=l),r===e.length-1&&(e[0].y-=l);break;case f.sideBottom:e[r-1].y+=l,e[r].y+=l,r===1&&(e[e.length-1].y+=l),r===e.length-1&&(e[0].y+=l)}}}};const I=(_,t,i)=>_>=t&&_<=i||_>=i&&_<=t,Z=Number.POSITIVE_INFINITY,R=Math.PI,tt=2*R,q=128/R,N=256/360,it=R/180,$=1/Math.LN2;function b(_,t){return(_%=t)>=0?_:_+t}function st(_){return b(_*q,256)}function ht(_){return b(_*N,256)}function et(_){return Math.log(_)*$}function nt(_,t,i){return _*(1-i)+t*i}const E=8,k=14,B=16;function _t(_){return E+Math.max((_-k)*B,0)}function lt(_,t,i){let s,h,n,e=0;for(const r of i){s=r.length;for(let l=1;l<s;++l)h=r[l-1],n=r[l],h.y>t!=n.y>t&&((n.x-h.x)*(t-h.y)-(n.y-h.y)*(_-h.x)>0?e++:e--)}return e!==0}function rt(_,t,i,s){let h,n,e,r;const l=s*s;for(const a of i){const d=a.length;if(!(d<2)){h=a[0].x,n=a[0].y;for(let m=1;m<d;++m){if(e=a[m].x,r=a[m].y,z(_,t,h,n,e,r)<l)return!0;h=e,n=r}}}return!1}function at(_,t){if(t===0||Number.isNaN(t))return _;const i=[],s=new g(0,0),h=new g(0,0),n=new g(0,0);for(let e=0;e<_.length;e++){const r=_[e],l=[];for(let a=0;a<r.length;a++){const d=r[a-1],m=r[a],y=r[a+1];a===0?s.setCoords(0,0):s.assignSub(m,d).normalize().rightPerpendicular(),a===r.length-1?h.setCoords(0,0):h.assignSub(y,m).normalize().rightPerpendicular(),n.assignAdd(s,h).normalize();const p=n.x*h.x+n.y*h.y;p!==0&&n.scale(1/p),l.push(g.add(m,n.scale(t)))}i.push(l)}return i}function xt(_,t,i,s){const h=new g(_[0],_[1]);if(h.scale(s),t==="viewport"){const n=-i*(Math.PI/180),e=Math.cos(n),r=Math.sin(n);h.rotate(e,r)}return h}export{G as A,A as G,lt as I,L as J,O as K,rt as N,at as P,U as R,X as _,b as a,xt as b,et as c,_t as d,tt as e,st as f,Y as g,g as h,P as i,H as j,ht as l,j as m,R as o,nt as p,J as q,Z as r,it as s,C as t,K as y,W as z};
