const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/streamLayerUtils-5DmGrBIh.js","assets/utils-paHww2CL.js","assets/index-DMwY2Yeh.js","assets/index-DGW5n9KZ.css","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/PortalItem-CJdFYfTh.js","assets/jsonContext-C78W7VHJ.js","assets/portalItemUtils-Doqe9RdJ.js","assets/projection-DL1aNLQS.js","assets/projectBuffer-CWX1J5rk.js","assets/zscale-DcxcvFoT.js","assets/saveUtils-wtvPKSWy.js","assets/createConnection-DBbfLaub.js","assets/query-DGVkdA_t.js","assets/normalizeUtils-tYwCoEfv.js","assets/normalizeUtilsCommon-Dh7MTQbs.js","assets/utils-Sq5BbeZP.js","assets/utils-BQm91vBd.js","assets/pbfQueryUtils-Bfqgmmlw.js","assets/pbf-CFjYlUkv.js","assets/OptimizedFeature-D3320lj0.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/queryZScale-C4tBtOnP.js","assets/Query-Dd46G94Q.js","assets/Field-FlLvuz43.js","assets/fieldType-C6h0mWzJ.js","assets/TimeExtent-D_QVyVxF.js"])))=>i.map(i=>d[i]);
import{P,X as t,Z as i,a2 as I,ap as F,g as x,cI as E,_ as f,s as d,a6 as A,d9 as v,t as O,bI as h,df as D,U as k,aq as U,w as C,cD as g,au as N,a1 as w,M as L}from"./index-DMwY2Yeh.js";import"./UniqueValueRenderer-BWeIsITM.js";import{o as V,u as G,m as J}from"./jsonUtils-h7tU0Uer.js";import{S as M,f as z}from"./Layer-B7MPCWr8.js";import{l as q}from"./ArcGISService-DfIkeWvW.js";import{l as W}from"./BlendLayer-BZi4HZ3X.js";import{e as Z}from"./CustomParametersMixin-D4WPrEFl.js";import{c as Q}from"./FeatureEffectLayer-DJvLedEL.js";import{c as X}from"./FeatureReductionLayer-BJl1hgu6.js";import{b as Y}from"./OperationalLayer-DkH5aW2U.js";import{j as B}from"./PortalLayer-DdSdd8Dt.js";import{f as H}from"./RefreshableLayer-KOp797qb.js";import{t as K}from"./ScaleRangeLayer-BawLb3lW.js";import{l as ee}from"./TemporalLayer-DyyQYNf6.js";import{p as te,d as re,v as ie,j as oe,l as se,s as ne,y as ae}from"./commonProperties-BfyFIYkl.js";import{z as pe,n as le,C as de}from"./labelingInfo-DW8snHub.js";import{y as me}from"./Field-FlLvuz43.js";import{s as ce}from"./fieldProperties-ToAvmRQ-.js";import{t as ue}from"./styleUtils-CesrUL8M.js";import{b as he}from"./Query-Dd46G94Q.js";import{p as ye}from"./popupUtils-DpbfCD_q.js";import{h as fe}from"./ElevationInfo-BPUkZdoe.js";import{A as c}from"./interfaces-CL2NbQte.js";import"./RendererLegendOptions-wLw-yCIt.js";import"./diffUtils-BNvOWYG7.js";import"./enums-BoehirYs.js";import"./colorRamps-D2x6Yad2.js";import"./compilerUtils-RCjhmI8-.js";import"./lengthUtils-DPy0fDMV.js";import"./styleUtils-BSN3jcA_.js";import"./layerUtils-Co4QOtAn.js";import"./defaults-BtwZGStO.js";import"./defaultsJSON-GKolV7NZ.js";import"./LRUCache-BZgFsCAB.js";import"./Version-DMGHCpYW.js";import"./FieldsIndex-Bpsh9sfE.js";import"./colorUtils-BPNTvscP.js";import"./vec42-CwZz9wN3.js";import"./common-DokbeE9L.js";import"./vec4f64-CMoMXWBi.js";import"./heatmapUtils-BzMZhmln.js";import"./TimeExtent-D_QVyVxF.js";import"./arcgisLayerUrl-C2XR9Yu_.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DsYZliz4.js";import"./FeatureReductionSelection-D7R64uU4.js";import"./MD5-C9MwAd2G.js";import"./PortalItem-CJdFYfTh.js";import"./portalItemUtils-Doqe9RdJ.js";import"./projection-DL1aNLQS.js";import"./projectBuffer-CWX1J5rk.js";import"./zscale-DcxcvFoT.js";import"./TimeInfo-Bc08AgQt.js";import"./labelUtils-C913L2yL.js";import"./uuid-Cl5lrJ4c.js";import"./fieldType-C6h0mWzJ.js";var y;let l=y=class extends P{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};t([i({type:Number,json:{write:!0}})],l.prototype,"age",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"ageReceived",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"displayCount",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"maxObservations",void 0),l=y=t([I("esri.layers.support.PurgeOptions")],l);const j=l,b=ce();function S(e,o){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let r=class extends X(Q(W(ee(K(H(q(Y(B(M(Z(F(z)))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new j,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=x.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=E(async(o,s,a)=>{const{save:n,saveAs:p}=await f(()=>import("./streamLayerUtils-5DmGrBIh.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]));switch(o){case c.SAVE:return n(this,s);case c.SAVE_AS:return p(this,a,s)}})}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(A).then(()=>this._fetchService(o))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){v(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){var n;o=o.layerDefinition||o;const a=(n=o.drawingInfo)==null?void 0:n.renderer;if(a){const p=V(a,o,s)||void 0;return p||O.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),p}return pe(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([f(()=>import("./createConnection-DBbfLaub.js"),__vite__mapDeps([13,2,3,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27])),this.load()]),s=this.geometryType?h.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:p=null,maxReconnectionAttempts:R=0,maxReconnectionInterval:$=20,spatialReference:T=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,T,s,n,p,R,$,a??void 0),_=D([this.on("send-message-to-socket",u=>m.sendMessageToSocket(u)),this.on("send-message-to-client",u=>m.sendMessageToClient(u))]);return m.once("destroy",_.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return ye(this,e)}createQuery(){const e=new he;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some(a=>(a.name===e&&(s=a.domain),!!s)),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(c.SAVE,e)}async saveAs(e,o){return this._debouncedSaveOperations(c.SAVE_AS,o,e)}write(e,o){const s=o==null?void 0:o.messages;return this.webSocketUrl?(s==null||s.push(S(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s==null||s.push(S(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var o,s,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await k(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((o=this.timeInfo)!=null&&o.trackIdField))throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(s=this.fields.find(p=>p.type==="oid"))==null?void 0:s.name;if(!n)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new me({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),v(this.renderer,this.fieldsIndex),U(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),ue(this,{origin:"service"})}};t([i({type:String})],r.prototype,"copyright",void 0),t([i({readOnly:!0})],r.prototype,"defaultPopupTemplate",null),t([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),t([i({type:String})],r.prototype,"displayField",void 0),t([i({type:fe})],r.prototype,"elevationInfo",void 0),t([i({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],r.prototype,"featureReduction",null),t([i(b.fields)],r.prototype,"fields",void 0),t([i(b.fieldsIndex)],r.prototype,"fieldsIndex",void 0),t([i({type:C,json:{name:"layerDefinition.definitionGeometry",write:!0}})],r.prototype,"geometryDefinition",void 0),t([i({type:h.apiValues,json:{read:{reader:h.read}}})],r.prototype,"geometryType",void 0),t([i(te)],r.prototype,"labelsVisible",void 0),t([i({type:[de],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:le},write:!0}})],r.prototype,"labelingInfo",void 0),t([i(re)],r.prototype,"legendEnabled",void 0),t([i({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],r.prototype,"listMode",void 0),t([i({type:g})],r.prototype,"maxReconnectionAttempts",void 0),t([i({type:g})],r.prototype,"maxReconnectionInterval",void 0),t([i(ie)],r.prototype,"maxScale",void 0),t([i(oe)],r.prototype,"minScale",void 0),t([i({type:String})],r.prototype,"objectIdField",void 0),t([i({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],r.prototype,"operationalLayerType",void 0),t([i({readOnly:!0})],r.prototype,"outFields",void 0),t([i(se)],r.prototype,"popupEnabled",void 0),t([i({type:N,json:{name:"popupInfo",write:!0}})],r.prototype,"popupTemplate",void 0),t([i({type:j})],r.prototype,"purgeOptions",void 0),t([i({json:{read:!1,write:!1}})],r.prototype,"refreshInterval",void 0),t([i({types:J,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:G,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],r.prototype,"renderer",null),t([w("service","renderer",["drawingInfo.renderer","defaultSymbol"]),w("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],r.prototype,"readRenderer",null),t([i((()=>{const e=L(ne);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],r.prototype,"screenSizePerspectiveEnabled",void 0),t([i()],r.prototype,"sourceJSON",void 0),t([i({type:x,json:{origins:{service:{read:{source:"spatialReference"}}}}})],r.prototype,"spatialReference",void 0),t([i({json:{read:!1}})],r.prototype,"type",void 0),t([i(ae)],r.prototype,"url",void 0),t([i({type:Number})],r.prototype,"updateInterval",void 0),t([i({json:{read:!1,write:!1}})],r.prototype,"useViewTime",void 0),t([i({type:String})],r.prototype,"webSocketUrl",void 0),r=t([I("esri.layers.StreamLayer")],r);const wt=r;export{wt as default};
